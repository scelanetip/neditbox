{"version":3,"sources":["../../scripts/header.js","../../node_modules/browser-pack/_prelude.js","../actions/drag.ts","../actions/drop/DropEvent.ts","../actions/drop/index.ts","../actions/gesture.ts","../actions/index.ts","../actions/resize.ts","../auto-scroll/index.ts","../auto-start/InteractableMethods.ts","../auto-start/base.ts","../auto-start/dragAxis.ts","../auto-start/hold.ts","../auto-start/index.ts","../core/BaseEvent.ts","../core/Eventable.ts","../core/InteractEvent.ts","../core/Interactable.ts","../core/InteractableSet.ts","../core/Interaction.ts","../core/PointerInfo.ts","../core/defaultOptions.ts","../core/interactablePreventDefault.ts","../core/interactionFinder.ts","../core/interactions.ts","../core/scope.ts","../dev-tools/index.ts","../inertia/index.ts","../interact/index.ts","../interact/interact.ts","index.ts","../modifiers/base.ts","../modifiers/index.ts","../modifiers/restrict/edges.ts","../modifiers/restrict/pointer.ts","../modifiers/restrict/size.ts","../modifiers/snap/edges.ts","../modifiers/snap/pointer.ts","../modifiers/snap/size.ts","../pointer-events/PointerEvent.ts","../pointer-events/base.ts","../pointer-events/holdRepeat.ts","../pointer-events/index.ts","../pointer-events/interactableTargets.ts","../reflow/index.ts","../types/index.ts","../utils/Signals.ts","../utils/arr.ts","../utils/browser.ts","../utils/clone.ts","../utils/domObjects.ts","../utils/domUtils.ts","../utils/events.ts","../utils/extend.ts","../utils/getOriginXY.ts","../utils/hypot.ts","../utils/index.ts","../utils/is.ts","../utils/isWindow.ts","../utils/normalizeListeners.ts","../utils/pointerExtend.ts","../utils/pointerUtils.ts","../utils/raf.ts","../utils/rect.ts","../utils/snappers/grid.ts","../utils/snappers/index.ts","../utils/window.ts"],"names":[],"mappings":"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","file":"interact.js","sourceRoot":"","sourcesContent":["/**\n * interact.js 1.4.0-rc.13\n *\n * Copyright (c) 2012-2019 Taye Adeyemi <dev@taye.me>\n * Released under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { ActionName, Scope } from '@interactjs/core/scope'\nimport * as arr from '@interactjs/utils/arr'\nimport * as is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drag: Interact.DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Drag]?: typeof drag\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Drag = 'drag'\n  }\n}\n\n(ActionName as any).Drag = 'drag'\n\nexport type DragEvent = Interact.InteractEvent<ActionName.Drag>\n\nexport type DraggableMethod = Interact.ActionMethod<Interact.DraggableOptions>\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    interactions,\n    defaults,\n  } = scope\n\n  interactions.signals.on('before-action-move', beforeMove)\n  interactions.signals.on('action-resume', beforeMove)\n\n  // dragmove\n  interactions.signals.on('action-move', move)\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions[ActionName.Drag] = drag\n  actions.names.push(ActionName.Drag)\n  arr.merge(actions.eventTypes, [\n    'dragstart',\n    'dragmove',\n    'draginertiastart',\n    'dragresume',\n    'dragend',\n  ])\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y   = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y   = 0\n  }\n  else if (axis === 'y') {\n    interaction.coords.cur.page.x   = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x   = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite]   = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (this: Interact.Interactable, options?: Interact.DraggableOptions | boolean): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag\n}\n\nconst drag: Interact.Plugin = {\n  id: 'actions/drag',\n  install,\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  } as Interact.DropzoneOptions,\n\n  checker (_pointer, _event, interactable) {\n    const dragOptions = interactable.options.drag\n\n    return dragOptions.enabled\n      ? {\n        name: 'drag',\n        axis: (dragOptions.lockAxis === 'start'\n          ? dragOptions.startAxis\n          : dragOptions.lockAxis),\n      }\n      : null\n  },\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n","import BaseEvent from '@interactjs/core/BaseEvent'\nimport Interactable from '@interactjs/core/Interactable'\nimport InteractEvent from '@interactjs/core/InteractEvent'\nimport Interaction from '@interactjs/core/Interaction'\nimport { ActionName } from '@interactjs/core/scope'\nimport * as arr from '@interactjs/utils/arr'\n\nclass DropEvent extends BaseEvent {\n  target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<ActionName.Drag>\n  relatedTarget: Element\n  draggable: Interactable\n  timeStamp: number\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: Interaction['dropState'], dragEvent: InteractEvent, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave'\n      ? dropState.prev\n      : dropState.cur\n\n    this.type          = type\n    this.target        = element\n    this.currentTarget = element\n    this.dropzone      = dropzone\n    this.dragEvent     = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable     = dragEvent.interactable\n    this.timeStamp     = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      (this.type !== 'dropactivate') && (\n        !this.dropzone ||\n        dropState.cur.dropzone !== this.dropzone ||\n        dropState.cur.element !== this.target)) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(activeDrops, ({ dropzone, element }) =>\n        dropzone === this.dropzone && element === this.target)\n\n      dropState.activeDrops = [\n        ...activeDrops.slice(0, index),\n        ...activeDrops.slice(index + 1),\n      ]\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    }\n    else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\nexport default DropEvent\n","import Interactable from '@interactjs/core/Interactable'\nimport InteractEvent from '@interactjs/core/InteractEvent'\nimport { Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\nimport drag from '../drag'\nimport DropEvent from './DropEvent'\n\nexport interface DropzoneMethod {\n  (options: Interact.DropzoneOptions | boolean): Interact.Interactable\n  (): Interact.DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: Interact.PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: {\n      cur: {\n        dropzone: Interactable,   // the dropzone a drag target might be dropped into\n        element: Element,         // the element at the time of checking\n      },\n      prev: {\n        dropzone: Interactable,   // the dropzone that was recently dragged away from\n        element: Element,         // the element at the time of checking\n      },\n      rejected: boolean,          // wheather the potential drop was rejected from a listener\n      events: any,                // the drop events related to the current drag event\n      activeDrops: Array<{\n        dropzone: Interactable\n        element: Element\n        rect: Interact.Rect\n      }>,\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drop: Interact.DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n}\n\ndeclare module '@interactjs/interact/interact' {\n  interface InteractStatic {\n    dynamicDrop: (newValue?: boolean) => boolean | Interact.interact\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interact,\n    /** @lends Interactable */\n    Interactable, // eslint-disable-line no-shadow\n    interactions,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  interactions.signals.on('before-action-start', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    interaction.dropState = {\n      cur: {\n        dropzone: null,\n        element: null,\n      },\n      prev: {\n        dropzone: null,\n        element: null,\n      },\n      rejected: null,\n      events: null,\n      activeDrops: null,\n    }\n  })\n\n  interactions.signals.on('after-action-start', ({ interaction, event, iEvent: dragEvent }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    const { dropState } = interaction\n\n    // reset active dropzones\n    dropState.activeDrops = null\n    dropState.events = null\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n    dropState.events = getDropEvents(interaction, event, dragEvent)\n\n    if (dropState.events.activate) {\n      fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n    }\n  })\n\n  // FIXME proper signal types\n  interactions.signals.on('action-move', (arg) => onEventCreated(arg as any, scope))\n  interactions.signals.on('action-end', (arg) => onEventCreated(arg as any, scope))\n\n  interactions.signals.on('after-action-move', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    fireDropEvents(interaction, interaction.dropState.events)\n    interaction.dropState.events = {}\n  })\n\n  interactions.signals.on('after-action-end', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    fireDropEvents(interaction, interaction.dropState.events)\n  })\n\n  interactions.signals.on('stop', ({ interaction }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    const { dropState } = interaction\n\n    dropState.activeDrops = null\n    dropState.events = null\n    dropState.cur.dropzone = null\n    dropState.cur.element = null\n    dropState.prev.dropzone = null\n    dropState.prev.element = null\n    dropState.rejected = false\n  })\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n    return dropzoneMethod(this, options)\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (this: Interact.Interactable, dragEvent, event, draggable, draggableElement, dropElement, rect) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (utils.is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  utils.arr.merge(actions.eventTypes, [\n    'dragenter',\n    'dragleave',\n    'dropactivate',\n    'dropdeactivate',\n    'dropmove',\n    'drop',\n  ])\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }, draggableElement) {\n  const drops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) { continue }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if ((utils.is.element(accept) && accept !== draggableElement) ||\n        (utils.is.string(accept) &&\n        !utils.dom.matchesSelector(draggableElement, accept)) ||\n        (utils.is.func(accept) && !accept({ dropzone, draggableElement }))) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : utils.is.array(dropzone.target) ? dropzone.target : [dropzone.target]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops, event) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop ({ dropState, interactable: draggable, element: dragElement }: Partial<Interact.Interaction>, dragEvent, pointerEvent) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n      ? dropzoneElement\n      : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.dom.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interact.Interaction, _pointerEvent, dragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target   = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target   = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\nfunction fireDropEvents (interaction: Interact.Interaction, events) {\n  const { dropState } = interaction\n  const {\n    activeDrops,\n    cur,\n    prev,\n  } = dropState\n\n  if (events.leave) { prev.dropzone.fire(events.leave) }\n  if (events.move) { cur.dropzone.fire(events.move) }\n  if (events.enter) { cur.dropzone.fire(events.enter) }\n  if (events.drop) { cur.dropzone.fire(events.drop) }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone  = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: Interact.SignalArg, scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected = dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone  = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod (interactable: Interact.Interactable): Interact.DropzoneOptions\nfunction dropzoneMethod (interactable: Interact.Interactable, options: Interact.DropzoneOptions | boolean)\nfunction dropzoneMethod (interactable: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n  if (utils.is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = utils.normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (utils.is.func(options.ondrop)) { interactable.on('drop', options.ondrop) }\n    if (utils.is.func(options.ondropactivate)) { interactable.on('dropactivate', options.ondropactivate) }\n    if (utils.is.func(options.ondropdeactivate)) { interactable.on('dropdeactivate', options.ondropdeactivate) }\n    if (utils.is.func(options.ondragenter)) { interactable.on('dragenter', options.ondragenter) }\n    if (utils.is.func(options.ondragleave)) { interactable.on('dragleave', options.ondragleave) }\n    if (utils.is.func(options.ondropmove)) { interactable.on('dropmove', options.ondropmove) }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    }\n    else if (utils.is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (utils.is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interact.Interactable,\n  dragEvent: InteractEvent,\n  event: Interact.PointerEventType,\n  draggable: Interact.Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return (interactable.options.drop.checker\n      ? interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n      : false)\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement, 'drag')\n    const page = utils.pointer.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = (page.x > rect.left) && (page.x < rect.right)\n    const vertical   = (page.y > rect.top) && (page.y < rect.bottom)\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2\n    const cy = dragRect.top  + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && utils.is.number(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n                          Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top)))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n  }\n\n  return dropped\n}\n\nconst drop = {\n  id: 'actions/drop',\n  install,\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  } as Interact.DropzoneOptions,\n}\n\nexport default drop\n","import InteractEvent from '@interactjs/core/InteractEvent'\nimport { ActionName, Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\n\nexport type GesturableMethod = Interact.ActionMethod<Interact.GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number,          // angle from first to second touch\n      distance: number,\n      scale: number,          // gesture.distance / gesture.startDistance\n      startAngle: number,     // angle of line joining two touches\n      startDistance: number,  // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    gesture: Interact.GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Gesture]?: typeof gesture\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Gesture = 'gesture'\n  }\n}\n\n(ActionName as any).Gesture = 'gesture'\n\nexport interface GestureEvent extends Interact.InteractEvent<ActionName.Gesture> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Interact.Rect // enclosing box of all points\n  touches: Interact.PointerType[]\n}\n\nexport interface GestureSignalArg extends Interact.SignalArg {\n  iEvent: GestureEvent\n  interaction: Interact.Interaction<ActionName.Gesture>\n  event: Interact.PointerEventType | GestureEvent\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    interactions,\n    defaults,\n  } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (this: Interact.Interactable, options: Interact.GesturableOptions | boolean) {\n    if (utils.is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (utils.is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as Interact.Options\n  } as GesturableMethod\n\n  interactions.signals.on('action-start', updateGestureProps)\n  interactions.signals.on('action-move', updateGestureProps)\n  interactions.signals.on('action-end', updateGestureProps)\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.gesture = {\n      angle: 0,\n      distance: 0,\n      scale: 1,\n      startAngle: 0,\n      startDistance: 0,\n    }\n  })\n\n  actions[ActionName.Gesture] = gesture\n  actions.names.push(ActionName.Gesture)\n  utils.arr.merge(actions.eventTypes, [\n    'gesturestart',\n    'gesturemove',\n    'gestureend',\n  ])\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nconst gesture = {\n  id: 'actions/gesture',\n  install,\n  defaults: {\n  },\n\n  checker (_pointer, _event, _interactable, _element, interaction: { pointers: { length: number; }; }) {\n    if (interaction.pointers.length >= 2) {\n      return { name: 'gesture' }\n    }\n\n    return null\n  },\n\n  getCursor () {\n    return ''\n  },\n}\n\nfunction updateGestureProps ({ interaction, iEvent, event, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') { return }\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource)\n    iEvent.box      = utils.pointer.touchBBox(pointers)\n    iEvent.scale    = 1\n    iEvent.ds       = 0\n    iEvent.angle    = utils.pointer.touchAngle(pointers, deltaSource)\n    iEvent.da       = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  }\n  else if (ending || event instanceof InteractEvent) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box      = prevEvent.box\n    iEvent.scale    = prevEvent.scale\n    iEvent.ds       = 0\n    iEvent.angle    = prevEvent.angle\n    iEvent.da       = 0\n  }\n  else {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource)\n    iEvent.box      = utils.pointer.touchBBox(pointers)\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle    = utils.pointer.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (utils.is.number(iEvent.scale) &&\n      iEvent.scale !== Infinity &&\n      !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nexport default gesture\n","import { Scope } from '@interactjs/core/scope'\nimport drag, { DragEvent } from './drag'\nimport drop from './drop'\nimport gesture, { GestureEvent } from './gesture'\nimport resize, { ResizeEvent } from './resize'\n\nfunction install (scope: Scope) {\n  scope.usePlugin(gesture)\n  scope.usePlugin(resize)\n  scope.usePlugin(drag)\n  scope.usePlugin(drop)\n}\n\nconst id = 'actions'\n\nexport {\n  id,\n  install,\n  gesture,\n  GestureEvent,\n  resize,\n  ResizeEvent,\n  drag,\n  DragEvent,\n  drop,\n}\n","import { ActionProps, Interaction } from '@interactjs/core/Interaction'\nimport { ActionName, Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = Interact.ActionMethod<Interact.ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeRects: {\n      start: Required<Interact.Rect>\n      current: Interact.Rect\n      inverted: Required<Interact.Rect>\n      previous: Required<Interact.Rect>\n      delta: Required<Interact.Rect>\n    }\n    resizeStartAspectRatio: number\n  }\n\n  interface ActionProps {\n    _linkedEdges?: { [key: string]: boolean }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    resize: Interact.ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Resize]?: typeof resize\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Resize = 'resize'\n  }\n}\n\n(ActionName as any).Resize = 'resize'\n\nexport interface ResizeEvent extends Interact.InteractEvent<ActionName.Resize> {\n  deltaRect?: Required<Interact.Rect>\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    interactions,\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  interactions.signals.on('new', (interaction) => {\n    interaction.resizeAxes = 'xy'\n  })\n\n  interactions.signals.on('action-start', start)\n  interactions.signals.on('action-move', move)\n\n  interactions.signals.on('action-start', updateEventAxes)\n  interactions.signals.on('action-move', updateEventAxes)\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interact.Interactable, options: Interact.ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions[ActionName.Resize] = resize\n  actions.names.push(ActionName.Resize)\n  utils.arr.merge(actions.eventTypes, [\n    'resizestart',\n    'resizemove',\n    'resizeinertiastart',\n    'resizeresume',\n    'resizeend',\n  ])\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nconst resize = {\n  id: 'actions/resize',\n  install,\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as Interact.ResizableOptions,\n\n  checker (\n    _pointer: Interact.PointerType,\n    _event: Interact.PointerEventType,\n    interactable: Interact.Interactable,\n    element: Element,\n    interaction: Interaction,\n    rect: Interact.Rect\n  ) {\n    if (!rect) { return null }\n\n    const page = utils.extend({}, interaction.coords.cur.page)\n    const options = interactable.options\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize\n      const resizeEdges: { [edge: string]: boolean } = { left: false, right: false, top: false, bottom: false }\n\n      // if using resize.edges\n      if (utils.is.object(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n            resizeOptions.edges[edge],\n            page,\n            interaction._latestPointer.eventTarget,\n            element,\n            rect,\n            resizeOptions.margin || this.defaultMargin)\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          }\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - this.defaultMargin)\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - this.defaultMargin)\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n          }\n        }\n      }\n    }\n\n    return null\n  },\n\n  cursors: null as unknown as ReturnType<typeof initCursors>,\n\n  getCursor (action: ActionProps) {\n    const cursors = resize.cursors as { [key: string]: string }\n    if (action.axis) {\n      return cursors[action.name + action.axis]\n    }\n    else if (action.edges) {\n      let cursorKey = ''\n      const edgeNames = ['top', 'bottom', 'left', 'right']\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i]\n        }\n      }\n\n      return cursors[cursorKey]\n    }\n\n    return null\n  },\n\n  defaultMargin: null as unknown as number,\n}\n\nfunction resizable (interactable: Interact.Interactable, options: Interact.OrBoolean<Interact.ResizableOptions> | boolean, scope: Scope) {\n  if (utils.is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (utils.is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    }\n    else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (utils.is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    }\n    else if (utils.is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (utils.is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (name: string, value: any, page: Interact.Point, element: Node, interactableElement: Element, rect: Interact.Rect, margin: number) {\n  // false, '', undefined, null\n  if (!value) { return false }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.is.number(rect.width) ? rect.width  : rect.right  - rect.left\n    const height = utils.is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, (name === 'left' || name === 'right' ? width : height) / 2)\n\n    if (width < 0) {\n      if      (name === 'left')  { name = 'right' }\n      else if (name === 'right') { name = 'left'  }\n    }\n    if (height < 0) {\n      if      (name === 'top')    { name = 'bottom' }\n      else if (name === 'bottom') { name = 'top'    }\n    }\n\n    if (name === 'left') { return page.x < ((width  >= 0 ? rect.left : rect.right) + margin) }\n    if (name === 'top') { return page.y < ((height >= 0 ? rect.top : rect.bottom) + margin) }\n\n    if (name === 'right') { return page.x > ((width  >= 0 ? rect.right : rect.left) - margin) }\n    if (name === 'bottom') { return page.y > ((height >= 0 ? rect.bottom : rect.top) - margin) }\n  }\n\n  // the remaining checks require an element\n  if (!utils.is.element(element)) { return false }\n\n  return utils.is.element(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.dom.matchesUpTo(element, value, interactableElement)\n}\n\nfunction initCursors (browser: typeof import ('@interactjs/utils/browser').default) {\n  return (browser.isIe9 ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  })\n}\n\nfunction start ({ iEvent, interaction }: Interact.SignalArg) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const startRect = interaction.rect\n  const resizeOptions = interaction.interactable.options.resize\n\n  /*\n   * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n   * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n   * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n   * on the active edges and the edge being interacted with.\n   */\n  if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n    const linkedEdges = utils.extend({}, interaction.prepared.edges)\n\n    linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom)\n    linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right)\n    linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top)\n    linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left)\n\n    interaction.prepared._linkedEdges = linkedEdges\n  }\n  else {\n    interaction.prepared._linkedEdges = null\n  }\n\n  // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n  if (resizeOptions.preserveAspectRatio) {\n    interaction.resizeStartAspectRatio = startRect.width / startRect.height\n  }\n\n  interaction.resizeRects = {\n    start     : startRect,\n    current   : utils.extend({}, startRect),\n    inverted  : utils.extend({}, startRect),\n    previous  : utils.extend({}, startRect),\n    delta     : {\n      left: 0,\n      right : 0,\n      width : 0,\n      top : 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  iEvent.rect = interaction.resizeRects.inverted\n  ; (iEvent as ResizeEvent).deltaRect = interaction.resizeRects.delta\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\n\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  let edges = interaction.prepared.edges\n\n  // eslint-disable-next-line no-shadow\n  const start      = interaction.resizeRects.start\n  const current    = interaction.resizeRects.current\n  const inverted   = interaction.resizeRects.inverted\n  const deltaRect  = interaction.resizeRects.delta\n  const previous   = utils.extend(interaction.resizeRects.previous, inverted)\n  const originalEdges = edges\n\n  const eventDelta = utils.extend({}, iEvent.delta)\n\n  if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n    // `resize.preserveAspectRatio` takes precedence over `resize.square`\n    const startAspectRatio = resizeOptions.preserveAspectRatio\n      ? interaction.resizeStartAspectRatio\n      : 1\n\n    edges = interaction.prepared._linkedEdges\n\n    if ((originalEdges.left && originalEdges.bottom) ||\n        (originalEdges.right && originalEdges.top)) {\n      eventDelta.y = -eventDelta.x / startAspectRatio\n    }\n    else if (originalEdges.left || originalEdges.right) { eventDelta.y = eventDelta.x / startAspectRatio }\n    else if (originalEdges.top  || originalEdges.bottom) { eventDelta.x = eventDelta.y * startAspectRatio }\n  }\n\n  // update the 'current' rect without modifications\n  if (edges.top) { current.top    += eventDelta.y }\n  if (edges.bottom) { current.bottom += eventDelta.y }\n  if (edges.left) { current.left   += eventDelta.x }\n  if (edges.right) { current.right  += eventDelta.x }\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    utils.extend(inverted, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      let swap\n\n      if (inverted.top > inverted.bottom) {\n        swap = inverted.top\n\n        inverted.top = inverted.bottom\n        inverted.bottom = swap\n      }\n      if (inverted.left > inverted.right) {\n        swap = inverted.left\n\n        inverted.left = inverted.right\n        inverted.right = swap\n      }\n    }\n  }\n  else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    inverted.top    = Math.min(current.top, start.bottom)\n    inverted.bottom = Math.max(current.bottom, start.top)\n    inverted.left   = Math.min(current.left, start.right)\n    inverted.right  = Math.max(current.right, start.left)\n  }\n\n  inverted.width  = inverted.right  - inverted.left\n  inverted.height = inverted.bottom - inverted.top\n\n  for (const edge in inverted) {\n    deltaRect[edge] = inverted[edge] - previous[edge]\n  }\n\n  iEvent.edges = interaction.prepared.edges\n  iEvent.rect = inverted\n  iEvent.deltaRect = deltaRect\n}\n\nfunction updateEventAxes ({ interaction, iEvent, action }) {\n  if (action !== 'resize' || !interaction.resizeAxes) { return }\n\n  const options = interaction.interactable.options\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = iEvent.delta.y\n    }\n    else {\n      iEvent.delta.y = iEvent.delta.x\n    }\n    iEvent.axes = 'xy'\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.delta.y = 0\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = 0\n    }\n  }\n}\n\nexport default resize\n","import * as domUtils from '@interactjs/utils/domUtils'\nimport * as is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ntype Scope = import ('@interactjs/core/scope').Scope\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    autoScroll?: Interact.AutoScrollOption\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    interactions,\n    defaults,\n    actions,\n  } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.autoScroll = null\n  })\n\n  interactions.signals.on('stop', autoScroll.stop)\n\n  interactions.signals.on('action-move', (arg: any) => autoScroll.onInteractionMove(arg))\n\n  actions.eventTypes.push('autoscroll')\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    margin   : 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as Window | Element,\n\n    // the scroll speed in pixels per second\n    speed    : 300,\n  } as Interact.AutoScrollOption,\n\n  now: Date.now,\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0,\n  y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interact.Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const options = interactable.options[autoScroll.interaction.prepared.name].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        }\n        else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop  += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable, actionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled\n  },\n  onInteractionMove ({ interaction, pointer }) {\n    if (!(interaction.interacting() &&\n          autoScroll.check(interaction.interactable, interaction.prepared.name))) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top\n    let right\n    let bottom\n    let left\n\n    const { interactable, element } = interaction\n    const options = interactable.options[interaction.prepared.name].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left   = pointer.clientX < autoScroll.margin\n      top    = pointer.clientY < autoScroll.margin\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin\n      top    = pointer.clientY < rect.top    + autoScroll.margin\n      right  = pointer.clientX > rect.right  - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = (right ? 1 : left ? -1 : 0)\n    autoScroll.y = (bottom ? 1 :  top ? -1 : 0)\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed  = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value, interactable, element) {\n  return (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n}\n\nexport function getScroll (container) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta ({ interaction, element }, func) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(\n    scrollOptions.container,\n    interaction.interactable,\n    element\n  )\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nexport default {\n  id: 'auto-scroll',\n  install,\n}\n","import { warnOnce } from '@interactjs/utils'\nimport * as is from '@interactjs/utils/is'\n\n// TODO: there seems to be a @babel/preset-typescript bug causing regular import\n// syntax to remain in js output\ntype Scope = import ('@interactjs/core/scope').Scope\ntype Actions = import ('@interactjs/core/scope').Actions\ntype Interaction = import ('@interactjs/core/Interaction').default\ntype Interactable = import ('@interactjs/core/Interactable').default\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: typeof getAction\n    defaultActionChecker: (pointer: any, event: any, interaction: any, element: any) => any\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: (...args: any) => boolean\n    allowFrom: (...args: any) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    pointerIsDown: boolean\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    actions,\n  } = scope\n\n  Interactable.prototype.getAction = getAction\n\n  /**\n   * ```js\n   * interact(element, { ignoreFrom: document.getElementById('no-action') })\n   * // or\n   * interact(element).ignoreFrom('input, textarea, a')\n   * ```\n   * @deprecated\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   * @deprecated\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *   if (interact.matchesSelector(event.target, '.drag-handle') {\n   *     // force drag with handle target\n   *     action.name = drag\n   *   }\n   *   else {\n   *     // resize from the top and right edges\n   *     action.name  = 'resize'\n   *     action.edges = { top: true, right: true }\n   *   }\n   *\n   *   return action\n   * })\n   * ```\n   *\n   * Gets or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n\n  Interactable.prototype.defaultActionChecker = function (this: Interactable, pointer, event, interaction, element) {\n    return defaultActionChecker(this, pointer, event, interaction, element, actions)\n  }\n}\n\nfunction getAction (this: Interactable, pointer: Interact.PointerType, event: Interact.PointerEventType, interaction: Interaction, element: Element): Interact.ActionProps {\n  const action = this.defaultActionChecker(pointer, event, interaction, element)\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction)\n  }\n\n  return action\n}\n\nfunction defaultActionChecker (interactable: Interactable, pointer: Interact.PointerType, event: Interact.PointerEventType, interaction: Interaction, element: Element, actions: Actions) {\n  const rect = interactable.getRect(element)\n  const buttons = (event as MouseEvent).buttons || ({\n    0: 1,\n    1: 4,\n    3: 8,\n    4: 16,\n  })[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  let action = null\n\n  for (const actionName of actions.names) {\n    // check mouseButton setting if the pointer is down\n    if (interaction.pointerIsDown &&\n        /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & interactable.options[actionName].mouseButtons) === 0) {\n      continue\n    }\n\n    action = (actions[actionName as keyof Actions] as any).checker(pointer, event, interactable, element, interaction, rect)\n\n    if (action) {\n      return action\n    }\n  }\n}\n\nfunction styleCursor (this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import * as utils from '@interactjs/utils'\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/interact/interact' {\n  interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n    maxInteractions: (...args: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface BaseDefaults {\n    actionChecker?\n    styleCursor?\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons?: 0 | 1 | 2 | 4 | 16\n  }\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: HTMLElement\n  signals: utils.Signals\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    interact,\n    interactions,\n    defaults,\n  } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  // set cursor style on mousedown\n  interactions.signals.on('down', ({ interaction, pointer, event, eventTarget }) => {\n    if (interaction.interacting()) { return }\n\n    const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n    prepare(interaction, actionInfo, scope)\n  })\n\n  // set cursor style on mousemove\n  interactions.signals.on('move', ({ interaction, pointer, event, eventTarget }) => {\n    if (interaction.pointerType !== 'mouse' ||\n        interaction.pointerIsDown ||\n        interaction.interacting()) { return }\n\n    const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n    prepare(interaction, actionInfo, scope)\n  })\n\n  interactions.signals.on('move', (arg) => {\n    const { interaction } = arg\n\n    if (!interaction.pointerIsDown ||\n        interaction.interacting() ||\n        !interaction.pointerWasMoved ||\n        !interaction.prepared.name) {\n      return\n    }\n\n    scope.autoStart.signals.fire('before-start', arg)\n\n    const { interactable } = interaction\n\n    if (interaction.prepared.name && interactable) {\n      // check manualStart and interaction limit\n      if (interactable.options[interaction.prepared.name].manualStart ||\n          !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)) {\n        interaction.stop()\n      }\n      else {\n        interaction.start(interaction.prepared, interactable, interaction.element)\n      }\n    }\n  })\n\n  interactions.signals.on('stop', ({ interaction }) => {\n    const { interactable } = interaction\n\n    if (interactable && interactable.options.styleCursor) {\n      setCursor(interaction.element as HTMLElement, '', scope)\n    }\n  })\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  utils.extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom:  null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = (newValue) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n    signals: new utils.Signals(),\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable, element, eventTarget, scope) {\n  if (interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n      interactable.options[action.name].enabled &&\n      withinInteractionLimit(interactable, element, action, scope)) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (interaction: Interact.Interaction, pointer, event, matches: Interact.Interactable[], matchElements: Element[], eventTarget: Element, scope: Interact.Scope) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) { continue }\n\n    const action = validateAction(\n      matchAction,\n      match,\n      matchElement,\n      eventTarget,\n      scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (interaction: Interact.Interaction, pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Element, scope: Interact.Scope) {\n  let matches = []\n  let matchElements = []\n\n  let element = eventTarget\n\n  function pushMatches (interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (utils.is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(interaction, pointer, event, matches, matchElements, eventTarget, scope)\n\n    if (actionInfo.action &&\n      !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = utils.dom.parentNode(element)\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (interaction: Interact.Interaction, { action, interactable, element }, scope: Interact.Scope) {\n  action = action || {}\n\n  if (interaction.interactable && interaction.interactable.options.styleCursor) {\n    setCursor(interaction.element as HTMLElement, '', scope)\n  }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  utils.copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name\n    ? interactable.getRect(element)\n    : null\n\n  if (interactable && interactable.options.styleCursor) {\n    const cursor = action ? scope.actions[action.name].getCursor(action) : ''\n    setCursor(interaction.element as HTMLElement, cursor, scope)\n  }\n\n  scope.autoStart.signals.fire('prepared', { interaction })\n}\n\nfunction withinInteractionLimit (interactable: Interact.Interactable, element: Element, action, scope: Interact.Scope) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) { return false }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) { continue }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) { continue }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue, scope: Interact.Scope) {\n  if (utils.is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: HTMLElement, cursor, scope: Interact.Scope) {\n  if (scope.autoStart.cursorElement) {\n    scope.autoStart.cursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nexport default {\n  id: 'auto-start/base',\n  install,\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n} as Interact.Plugin\n","import { ActionName } from '@interactjs/core/scope'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport * as is from '@interactjs/utils/is'\nimport autoStart from './base'\n\ntype Scope = import ('@interactjs/core/scope').Scope\n\nfunction install (scope: Scope) {\n  scope.autoStart.signals.on('before-start',  ({ interaction, eventTarget, dx, dy }) => {\n    if (interaction.prepared.name !== 'drag') { return }\n\n    // check if a drag is in the correct axis\n    const absX = Math.abs(dx)\n    const absY = Math.abs(dy)\n    const targetOptions = interaction.interactable.options.drag\n    const startAxis = targetOptions.startAxis\n    const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy')\n\n    interaction.prepared.axis = targetOptions.lockAxis === 'start'\n      ? currentAxis[0]  as 'x' | 'y' // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n    // if the movement isn't in the startAxis of the interactable\n    if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n      // cancel the prepared action\n      interaction.prepared.name = null\n\n      // then try to get a drag from another ineractable\n      let element = eventTarget\n\n      const getDraggable = function (interactable) {\n        if (interactable === interaction.interactable) { return }\n\n        const options = interaction.interactable.options.drag\n\n        if (!options.manualStart &&\n            interactable.testIgnoreAllow(options, element, eventTarget)) {\n          const action = interactable.getAction(\n            interaction.downPointer, interaction.downEvent, interaction, element)\n\n          if (action &&\n              action.name === ActionName.Drag &&\n              checkStartAxis(currentAxis, interactable) &&\n              autoStart.validateAction(action, interactable, element, eventTarget, scope)) {\n            return interactable\n          }\n        }\n      }\n\n      // check all interactables\n      while (is.element(element)) {\n        const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n        if (interactable) {\n          interaction.prepared.name = ActionName.Drag\n          interaction.interactable = interactable\n          interaction.element = element\n          break\n        }\n\n        element = parentNode(element)\n      }\n    }\n  })\n\n  function checkStartAxis (startAxis, interactable) {\n    if (!interactable) { return false }\n\n    const thisAxis = interactable.options[ActionName.Drag].startAxis\n\n    return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis)\n  }\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  install,\n}\n","import basePlugin from './base'\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    autoStart,\n    interactions,\n    defaults,\n  } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n\n  interactions.signals.on('new', (interaction) => {\n    interaction.autoStartHoldTimer = null\n  })\n\n  autoStart.signals.on('prepared', ({ interaction }) => {\n    const hold = getHoldDuration(interaction)\n\n    if (hold > 0) {\n      interaction.autoStartHoldTimer = setTimeout(() => {\n        interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n      }, hold)\n    }\n  })\n\n  interactions.signals.on('move', ({ interaction, duplicate }) => {\n    if (interaction.pointerWasMoved && !duplicate) {\n      clearTimeout(interaction.autoStartHoldTimer)\n    }\n  })\n\n  // prevent regular down->move autoStart\n  autoStart.signals.on('before-start', ({ interaction }) => {\n    const hold = getHoldDuration(interaction)\n\n    if (hold > 0) {\n      interaction.prepared.name = null\n    }\n  })\n}\n\nfunction getHoldDuration (interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) { return null }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nexport default {\n  id: 'auto-start/hold',\n  install,\n  getHoldDuration,\n}\n","import autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nfunction install (scope) {\n  scope.usePlugin(autoStart)\n  scope.usePlugin(hold)\n  scope.usePlugin(dragAxis)\n}\n\nconst id = 'auto-start'\n\nexport {\n  id,\n  install,\n  autoStart,\n  hold,\n  dragAxis,\n}\n","import Interactable from './Interactable'\nimport Interaction from './Interaction'\nimport { ActionName } from './scope'\n\nexport enum EventPhase {\n  Start = 'start',\n  Move = 'move',\n  End = 'end',\n  _NONE = '',\n}\n\nexport class BaseEvent<T extends ActionName = any> {\n  type: string\n  target: EventTarget\n  currentTarget: EventTarget\n  interactable: Interactable\n  _interaction: Interaction<T>\n  timeStamp: any\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  get interaction () {\n    return this._interaction._proxy\n  }\n\n  constructor (interaction) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\nexport default BaseEvent\n","import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport normalize, { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport { EventPhase, InteractEvent } from './InteractEvent'\nimport { ActionName } from './scope'\n\nfunction fireUntilImmediateStopped<\nT extends ActionName,\nP extends EventPhase,\n> (event: InteractEvent<T, P>, listeners: Interact.Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) { break }\n\n    listener(event)\n  }\n}\n\nclass Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire (event: any) {\n    let listeners\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) { continue }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n}\n\nexport default Eventable\n","import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport BaseEvent from './BaseEvent'\nimport defaults from './defaultOptions'\nimport Interaction from './Interaction'\nimport { ActionName } from './scope'\n\nexport enum EventPhase {\n  Start = 'start',\n  Move = 'move',\n  End = 'end',\n  _NONE = '',\n}\n\nexport class InteractEvent<\n  T extends ActionName = any,\n  P extends EventPhase = EventPhase._NONE,\n> extends BaseEvent<T> {\n  target: Element\n  currentTarget: Element\n  relatedTarget: Element\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Interact.Point\n  client: Interact.Point\n  delta: Interact.Point\n  rect: Required<Interact.Rect>\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Interact.Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // drag\n  dragEnter?: Element\n  dragLeave?: Element\n  // resize\n  axes?: Interact.Point\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction,\n    event: Interact.PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    related?: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target      = interaction.interactable\n    // FIXME: add deltaSource to defaults\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin      = getOriginXY(target, element, actionName)\n    const starting    = phase === 'start'\n    const ending      = phase === 'end'\n    const prevEvent   = starting ? this : interaction.prevEvent\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page      = extend({}, coords.page)\n    this.client    = extend({}, coords.client)\n    this.rect      = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey       = event.ctrlKey\n    this.altKey        = event.altKey\n    this.shiftKey      = event.shiftKey\n    this.metaKey       = event.metaKey\n    this.button        = (event as MouseEvent).button\n    this.buttons       = (event as MouseEvent).buttons\n    this.target        = element\n    this.currentTarget = element\n    this.relatedTarget = related || null\n    this.preEnd        = preEnd\n    this.type          = type || (actionName + (phase || ''))\n    this.interactable  = target\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0\n\n    this.x0       = interaction.coords.start.page.x - origin.x\n    this.y0       = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp\n    this.duration  = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = (ending || phase === 'inertiastart') ? this.getSwipe() : null\n  }\n\n  get pageX () { return this.page.x }\n  set pageX (value) { this.page.x = value }\n  get pageY () { return this.page.y }\n  set pageY (value) { this.page.y = value }\n\n  get clientX () { return this.client.x }\n  set clientX (value) { this.client.x = value }\n  get clientY () { return this.client.y }\n  set clientY (value) { this.client.y = value }\n\n  get dx () { return this.delta.x }\n  set dx (value) { this.delta.x = value }\n  get dy () { return this.delta.y }\n  set dy (value) { this.delta.y = value }\n\n  get velocityX () { return this.velocity.x }\n  set velocityX (value) { this.velocity.x = value }\n  get velocityY () { return this.velocity.y }\n  set velocityY (value) { this.velocity.y = value }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 ||\n        this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up   = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap)\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\nexport default InteractEvent\n","import * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport events from '@interactjs/utils/events'\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\nimport { ActionDefaults, Defaults, Options } from './defaultOptions'\nimport Eventable from './Eventable'\nimport { Actions } from './scope'\n\ntype IgnoreValue = string | Element | boolean\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  protected get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Actions\n  readonly target: Interact.Target\n  readonly events = new Eventable()\n  readonly _context: Document | Element\n  readonly _win: Window\n  readonly _doc: Document\n\n  /** */\n  constructor (target: Interact.Target, options: any, defaultContext: Document | Element) {\n    this._actions = options.actions\n    this.target   = target\n    this._context = options.context || defaultContext\n    this._win     = getWindow(trySelector(target) ? this._context : target)\n    this._doc     = this._win.document\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: string, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) { this.on(`${actionName}start`, phases.onstart) }\n    if (is.func(phases.onmove)) { this.on(`${actionName}move`, phases.onmove) }\n    if (is.func(phases.onend)) { this.on(`${actionName}end`, phases.onend) }\n    if (is.func(phases.oninertiastart)) { this.on(`${actionName}inertiastart`, phases.oninertiastart) }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName, prev, cur) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName, options: Interact.OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName in options) {\n      const actionOptions = this.options[actionName]\n      const optionValue = options[optionName]\n      const isArray = is.array(optionValue)\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue)\n      }\n\n      // if the option value is an array\n      if (isArray) {\n        actionOptions[optionName] = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (!isArray && is.plainObject(optionValue)) {\n        // copy the object\n        actionOptions[optionName] = extend(\n          actionOptions[optionName] || {},\n          clone(optionValue))\n\n        // set anabled field to true if it exists in the defaults\n        if (is.object(defaults.perAction[optionName]) && 'enabled' in defaults.perAction[optionName]) {\n          actionOptions[optionName].enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        actionOptions[optionName].enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        actionOptions[optionName] = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {object} The object's bounding rectangle.\n   */\n  getRect (element: Element) {\n    element = element || (is.element(this.target)\n      ? this.target\n      : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker (checker: (element: Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = checker\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName, newValue) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      this.options[optionName] = newValue\n\n      for (const action of this._actions.names) {\n        this.options[action][optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument ||\n            nodeContains(this._context, element))\n  }\n\n  testIgnoreAllow (this: Interactable, options: { ignoreFrom: IgnoreValue, allowFrom: IgnoreValue }, interactableElement: Element, eventTarget: Element) {\n    return (!this.testIgnore(options.ignoreFrom, interactableElement, eventTarget) &&\n            this.testAllow(options.allowFrom, interactableElement, eventTarget))\n  }\n\n  testAllow (this: Interactable, allowFrom: IgnoreValue, interactableElement: Element, element: Element) {\n    if (!allowFrom) { return true }\n\n    if (!is.element(element)) { return false }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, interactableElement)\n    }\n    else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (this: Interactable, ignoreFrom: IgnoreValue, interactableElement: Element, element: Element) {\n    if (!ignoreFrom || !is.element(element)) { return false }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, interactableElement)\n    }\n    else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire (iEvent) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: Interact.EventTypes, listenerArg?: Interact.ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') { type = browser.wheelEvent }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (arr.contains(this._actions.eventTypes, type)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          events[`${addRemove}Delegate`](this.target, this._context, type, listener, options)\n        }\n        // remove listener from this Interatable's element\n        else {\n          (events[addRemove] as typeof events.remove)(this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: Interact.OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    (this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName in this._actions.methodDict) {\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n\n      this[methodName](options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func(this[setting])) {\n        this[setting](options[setting])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   *\n   * @return {interact}\n   */\n  unset () {\n    events.remove(this.target as Node, 'all')\n\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type]\n\n        if (delegated.selectors[0] === this.target &&\n            delegated.contexts[0] === this._context) {\n          delegated.selectors.splice(0, 1)\n          delegated.contexts.splice(0, 1)\n          delegated.listeners.splice(0, 1)\n\n          // remove the arrays if they are empty\n          if (!delegated.selectors.length) {\n            delegated[type] = null\n          }\n        }\n\n        events.remove(this._context, type, events.delegateListener)\n        events.remove(this._context, type, events.delegateUseCapture, true)\n      }\n    }\n    else {\n      events.remove(this.target as Node, 'all')\n    }\n  }\n}\n\nexport default Interactable\n","import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\nimport Signals from '@interactjs/utils/Signals'\n\nexport default class InteractableSet {\n  signals = new Signals()\n\n  // all set interactables\n  list: Interact.Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Array<{ context: Document | Element, interactable: Interact.Interactable }>\n  } = {}\n\n  constructor (protected scope: Interact.Scope) {\n    this.signals.on('unset', ({ interactable }) => {\n      const { target, _context: context } = interactable\n      const targetMappings = is.string(target)\n        ? this.selectorMap[target]\n        : target[this.scope.id]\n\n      targetMappings.splice(targetMappings.findIndex((m) => m.context === context), 1)\n    })\n  }\n\n  new (target: Interact.Target, options?: any): Interact.Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) { this.selectorMap[target] = [] }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!interactable.target[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      target[this.scope.id].push(mappingInfo)\n    }\n\n    this.signals.fire('new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Interact.Target, options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings = isSelector\n      ? this.selectorMap[target as string]\n      : target[this.scope.id]\n\n    if (!targetMappings) { return null }\n\n    const found = arr.find(\n      targetMappings,\n      (m) => m.context === context &&\n        (isSelector || m.interactable.inContext(target)))\n\n    return found && found.interactable\n  }\n\n  forEachMatch (element: Document | Element, callback: (interactable: any) => any) {\n    for (const interactable of this.list) {\n      let ret\n\n      if ((is.string(interactable.target)\n      // target is a selector and the element matches\n        ? (is.element(element) && domUtils.matchesSelector(element, interactable.target))\n        // target is the element\n        : element === interactable.target) &&\n        // the element is in context\n        (interactable.inContext(element))) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import * as utils from '@interactjs/utils'\nimport Interactable from './Interactable'\nimport InteractEvent, { EventPhase } from './InteractEvent'\nimport PointerInfo from './PointerInfo'\nimport { ActionName } from './scope'\n\nexport interface ActionProps<T extends ActionName = any> {\n  name: T\n  axis?: 'x' | 'y' | 'xy'\n  edges?: {\n    [edge in keyof Interact.Rect]?: boolean\n  }\n}\n\nexport interface StartAction extends ActionProps {\n  name: ActionName | string\n}\n\nexport type InteractionProxy = Pick<Interaction,\n  'pointerIsDown' |\n  'pointerWasMoved' |\n  'start' |\n  'move' |\n  'end' |\n  'stop' |\n  'interacting' |\n  '_proxy'\n>\n\nexport class Interaction<T extends ActionName = any> {\n  // current interactable being interacted with\n  interactable: Interactable = null\n\n  // the target element of the interactable\n  element: Element = null\n  rect: Interact.Rect & Interact.Size\n  edges: {\n    [P in keyof Interact.Rect]?: boolean\n  }\n\n  _signals: utils.Signals\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name : null,\n    axis : null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: Interact.PointerEventType = null\n\n  downPointer: Interact.PointerType = {} as Interact.PointerType\n\n  _latestPointer: {\n    pointer: Interact.EventTarget\n    event: Interact.PointerEventType\n    eventTarget: Node,\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  // previous action event\n  prevEvent: InteractEvent<T> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _proxy: InteractionProxy = null\n\n  simulation = null\n\n  get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = utils.warnOnce(\n    function (this: Interaction, signalArg: any) {\n      this.move(signalArg)\n    },\n    'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords = {\n    // Starting InteractEvent pointer coordinates\n    start: utils.pointer.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: utils.pointer.newCoords(),\n    // current native pointer move event coordinates\n    cur: utils.pointer.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: utils.pointer.newCoords(),\n    // pointer velocity\n    velocity: utils.pointer.newCoords(),\n  }\n\n  /** */\n  constructor ({ pointerType, signals }: { pointerType?: string, signals: utils.Signals }) {\n    this._signals = signals\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {\n      get pointerIsDown () { return that.pointerIsDown },\n      get pointerWasMoved () { return that.pointerWasMoved },\n      start (action, i, e) { return that.start(action, i, e) },\n      move (arg) { return that.move(arg) },\n      end (event) { return that.end(event) },\n      stop () { return that.stop() },\n      interacting () { return that.interacting() },\n      get _proxy () { return this },\n    }\n\n    this._signals.fire('new', { interaction: this })\n  }\n\n  pointerDown (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n\n    this._signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {object} interact\n   */\n  start (action: StartAction, interactable: Interactable, element: Element) {\n    if (this.interacting() ||\n        !this.pointerIsDown ||\n        this.pointers.length < (action.name === ActionName.Gesture ? 2 : 1) ||\n        !interactable.options[action.name].enabled) {\n      return false\n    }\n\n    utils.copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element      = element\n    this.rect         = interactable.getRect(element)\n    this.edges        = this.prepared.edges\n    this._interacting = this._doPhase({\n      interaction: this,\n      event: this.downEvent,\n      phase: EventPhase.Start,\n    })\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer, event, eventTarget, false)\n      utils.pointer.setCoords(this.coords.cur, this.pointers.map((p) => p.pointer), this._now())\n    }\n\n    const duplicateMove = (this.coords.cur.page.x === this.coords.prev.page.x &&\n                           this.coords.cur.page.y === this.coords.prev.page.y &&\n                           this.coords.cur.client.x === this.coords.prev.client.x &&\n                           this.coords.cur.client.y === this.coords.prev.client.y)\n\n    let dx\n    let dy\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const signalArg = {\n      pointer,\n      pointerIndex: this.getPointerIndex(pointer),\n      event,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      utils.pointer.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n      utils.pointer.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._signals.fire('move', signalArg)\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        utils.pointer.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?) {\n    signalArg = utils.extend({\n      pointer: this._latestPointer.pointer,\n      event: this._latestPointer.event,\n      eventTarget: this._latestPointer.eventTarget,\n      interaction: this,\n    }, signalArg || {})\n\n    signalArg.phase = EventPhase.Move\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    this._signals.fire(/cancel$/i.test(event.type) ? 'cancel' : 'up', {\n      pointer,\n      pointerIndex,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.pointerIsDown = false\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event) {\n    this.end(event)\n    this._signals.fire('blur', { event, interaction: this })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: Interact.PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: EventPhase.End,\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._signals.fire('stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer) {\n    const pointerId = utils.pointer.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return (this.pointerType === 'mouse' || this.pointerType === 'pen')\n      ? this.pointers.length - 1\n      : utils.arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: EventTarget, down?: boolean) {\n    const id = utils.pointer.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false\n      ? false\n      : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(\n        id,\n        pointer,\n        event,\n        null,\n        null,\n      )\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    }\n    else {\n      pointerInfo.pointer = pointer\n    }\n\n    if (down) {\n      this.pointerIsDown = true\n\n      if (!this.interacting()) {\n        utils.pointer.setCoords(this.coords.start, this.pointers.map((p) => p.pointer), this._now())\n\n        utils.pointer.copyCoords(this.coords.cur, this.coords.start)\n        utils.pointer.copyCoords(this.coords.prev, this.coords.start)\n        utils.pointer.pointerExtend(this.downPointer, pointer)\n\n        this.downEvent = event\n        pointerInfo.downTime = this.coords.cur.timeStamp\n        pointerInfo.downTarget = eventTarget\n\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._signals.fire('update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer, event) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) { return }\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._signals.fire('remove-pointer', {\n      pointer,\n      event,\n      pointerIndex,\n      pointerInfo,\n      interaction: this,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n  }\n\n  _updateLatestPointer (pointer, event, eventTarget) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  _createPreparedEvent (event: Interact.PointerEventType, phase: EventPhase, preEnd: boolean, type: string) {\n    const actionName = this.prepared.name\n\n    return new InteractEvent(this, event, actionName, phase, this.element, null, preEnd, type)\n  }\n\n  _fireEvent (iEvent) {\n    this.interactable.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase (signalArg: Partial<Interact.SignalArg>) {\n    const { event, phase, preEnd, type } = signalArg\n    const beforeResult = this._signals.fire(`before-action-${phase}`, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type)\n    const { rect } = this\n\n    if (rect) {\n      // update the rect modifications\n      const edges = this.edges || this.prepared.edges || { left: true, right: true, top: true, bottom: true }\n\n      if (edges.top)    { rect.top    += iEvent.delta.y }\n      if (edges.bottom) { rect.bottom += iEvent.delta.y }\n      if (edges.left)   { rect.left   += iEvent.delta.x }\n      if (edges.right)  { rect.right  += iEvent.delta.x }\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    this._signals.fire(`action-${phase}`, signalArg)\n\n    this._fireEvent(iEvent)\n\n    this._signals.fire(`after-action-${phase}`, signalArg)\n\n    return true\n  }\n\n  _now () { return Date.now() }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","export class PointerInfo {\n  constructor (\n    public id: number,\n    public pointer: Interact.PointerType,\n    public event: Interact.PointerEventType,\n    public downTime: number,\n    public downTarget: EventTarget,\n  ) {}\n}\n\nexport default PointerInfo\n","// tslint:disable no-empty-interface\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {\n}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Window | Document | Element\n   [key: string]: any\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Interact.Point | string | Element\n  listeners?: Interact.Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> & Partial<PerActionDefaults> & {\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\n// export interface Options extends BaseDefaults, PerActionDefaults {}\n\nexport interface OptionsArg extends BaseDefaults, Interact.OrBoolean<PerActionDefaults> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n\nexport default defaults\n","import { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport events from '@interactjs/utils/events'\nimport * as is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\nfunction preventDefault (interactable, newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    interactable.options.preventDefault = newValue\n    return interactable\n  }\n\n  if (is.bool(newValue)) {\n    interactable.options.preventDefault = newValue ? 'always' : 'never'\n    return interactable\n  }\n\n  return interactable.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable, scope, event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') { return }\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (is.element(event.target) &&\n      matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event)\n  }\n}\n\nexport function install (scope) {\n  /** @lends Interactable */\n  const Interactable = scope.Interactable\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = function (newValue) {\n    return preventDefault(this, newValue)\n  }\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  for (const eventSignal of ['down', 'move', 'up', 'cancel']) {\n    scope.interactions.signals.on(eventSignal, onInteractionEvent)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.eventMap.dragstart = function preventNativeDrag (event) {\n    for (const interaction of scope.interactions.list) {\n      if (interaction.element &&\n        (interaction.element === event.target ||\n          nodeContains(interaction.element, event.target))) {\n        interaction.interactable.checkAndPreventDefault(event)\n        return\n      }\n    }\n  }\n}\n\nexport type Install = typeof install\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n}\n","import { some } from '@interactjs/utils/arr'\nimport * as dom from '@interactjs/utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: Interact.PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: Interact.EventTarget\n  curEventTarget: Interact.EventTarget\n  scope: Interact.Scope\n}\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouseOrPen', 'hasPointer', 'idle' ],\n\n  search (details) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget\n\n      if (interaction.simulation && interaction.simulation.allowResume &&\n          (interaction.pointerType === pointerType)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) { continue }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && (pointerType === interaction.pointerType)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction, pointerId) {\n  return some(interaction.pointers, ({ id }) => id === pointerId)\n}\n\nexport default finder\n","import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport events from '@interactjs/utils/events'\nimport pointerUtils from '@interactjs/utils/pointerUtils'\nimport Signals from '@interactjs/utils/Signals'\nimport InteractionBase from './Interaction'\nimport finder, { SearchDetails } from './interactionFinder'\nimport { Scope } from './scope'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      signals: Signals\n      new: (options: any) => InteractionBase\n      list: InteractionBase[]\n      listeners: { [type: string]: Interact.Listener }\n      eventMap: any\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n}\n\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer', 'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const signals = new Signals()\n\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  const eventMap = {} as { [key: string]: Interact.Listener }\n\n  if (domObjects.PointerEvent) {\n    eventMap[pEventTypes.down  ] = listeners.pointerDown\n    eventMap[pEventTypes.move  ] = listeners.pointerMove\n    eventMap[pEventTypes.up    ] = listeners.pointerUp\n    eventMap[pEventTypes.cancel] = listeners.pointerUp\n  }\n  else {\n    eventMap.mousedown   = listeners.pointerDown\n    eventMap.mousemove   = listeners.pointerMove\n    eventMap.mouseup     = listeners.pointerUp\n\n    eventMap.touchstart  = listeners.pointerDown\n    eventMap.touchmove   = listeners.pointerMove\n    eventMap.touchend    = listeners.pointerUp\n    eventMap.touchcancel = listeners.pointerUp\n  }\n\n  eventMap.blur = (event) => {\n    for (const interaction of scope.interactions.list) {\n      interaction.documentBlur(event)\n    }\n  }\n\n  scope.signals.on('add-document', onDocSignal)\n  scope.signals.on('remove-document', onDocSignal)\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class Interaction extends InteractionBase {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () { return scope.now() }\n  }\n  scope.interactions = {\n    signals,\n    // all active and idle interactions\n    list: [],\n    new (options: { pointerType?: string, signals?: Signals }) {\n      options.signals = signals\n\n      const interaction = new scope.Interaction(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    eventMap,\n    pointerMoveTolerance: 1,\n  }\n}\n\nfunction doOnInteractions (method, scope) {\n  return function (event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches = [] // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n    else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer ||\n          (scope.now() - scope.prevTouchTime < 500) ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event,\n          pointerId: pointerUtils.getPointerId(event),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.interactions.signals.fire('find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal ({ doc, scope, options }, signalName) {\n  const { eventMap } = scope.interactions\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const eventType in eventMap) {\n    eventMethod(doc, eventType, eventMap[eventType], eventOptions)\n  }\n}\n\nexport default {\n  id: 'core/interactions',\n  install,\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n","import * as utils from '@interactjs/utils'\nimport domObjects from '@interactjs/utils/domObjects'\nimport defaults from './defaultOptions'\nimport Eventable from './Eventable'\nimport InteractableBase from './Interactable'\nimport InteractableSet from './InteractableSet'\nimport InteractEvent from './InteractEvent'\nimport interactions from './interactions'\n\nconst {\n  win,\n  browser,\n  raf,\n  Signals,\n  events,\n} = utils\n\nexport enum ActionName {\n}\n\nexport interface Actions {\n  names: ActionName[]\n  methodDict: { [key: string]: string }\n  eventTypes: string[]\n}\n\nexport function createScope () {\n  return new Scope()\n}\n\nexport type Defaults = typeof defaults\n\nexport interface Plugin {\n  id?: string\n  install (scope: Scope, options?: any): void\n  [key: string]: any\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  signals = new Signals()\n  browser = browser\n  events = events\n  utils = utils\n  defaults: Defaults = utils.clone(defaults) as Defaults\n  Eventable = Eventable\n  actions: Actions = {\n    names: [],\n    methodDict: {},\n    eventTypes: [],\n  }\n\n  InteractEvent = InteractEvent\n  Interactable!: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: Plugin[] = []\n  _pluginMap: { [id: string]: Plugin } = {}\n\n  constructor () {\n    const scope = this as Scope\n\n    ; (this as { Interactable: typeof InteractableBase }).Interactable = class Interactable extends InteractableBase implements InteractableBase {\n      get _defaults () { return scope.defaults }\n\n      set (options: any) {\n        super.set(options)\n\n        scope.interactables.signals.fire('set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset () {\n        super.unset()\n        for (const interaction of scope.interactions.list) {\n          if (interaction.interactable === this) {\n            interaction.stop()\n          }\n        }\n\n        scope.interactables.signals.fire('unset', { interactable: this })\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window) {\n    return initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._pluginMap[plugin.id] || this._plugins.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) { this._pluginMap[plugin.id] = plugin }\n\n    plugin.install(this, options)\n    this._plugins.push(plugin)\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) { return false }\n\n    const window = win.getWindow(doc)\n\n    options = options ? utils.extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.signals.fire('add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    events.documents.splice(index, 1)\n\n    this.signals.fire('remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return ((this.window as any).Date as typeof Date || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window) {\n  win.init(window)\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n  events.init(window)\n\n  scope.usePlugin(interactions)\n  scope.document = window.document\n  scope.window = window\n\n  return scope\n}\n","/* eslint-disable no-console */\n/* global process */\nimport domObjects from '@interactjs/utils/domObjects'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport * as is from '@interactjs/utils/is'\nimport win from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport const links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\nexport const install = process.env.NODE_ENV === 'production'\n  ? () => {}\n  // eslint-disable-next-line no-restricted-syntax\n  : function install (scope: Interact.Scope, { logger }: { logger?: Logger } = {}) {\n    logger = logger || console\n    if (process.env.NODE_ENV !== 'production') {\n      scope.logger = logger\n      scope.interactions.signals.on('action-start', ({ interaction }) => {\n        touchAction(interaction, scope.logger)\n        boxSizing(interaction, scope.logger)\n        noListeners(interaction, scope.logger)\n      })\n    }\n  }\n\nexport const touchActionMessage = '[interact.js] Consider adding CSS \"touch-action: none\" to this element\\n'\nexport const boxSizingMessage = '[interact.js] Consider adding CSS \"box-sizing: border-box\" to this resizable element'\nexport const noListenersMessage = '[interact.js] There are no listeners set for this action'\n\nexport function touchAction ({ element }: Interact.Interaction, logger: Logger) {\n  if (!parentHasStyle(element, 'touchAction', /pan-|pinch|none/)) {\n    logger.warn(\n      touchActionMessage,\n      element,\n      links.touchAction)\n  }\n}\n\nexport function boxSizing (interaction: Interact.Interaction, logger: Logger) {\n  const { element } = interaction\n\n  if (\n    interaction.prepared.name === 'resize' &&\n    element instanceof domObjects.HTMLElement &&\n    !hasStyle(element, 'boxSizing', /border-box/)\n  ) {\n    logger.warn(\n      boxSizingMessage,\n      element,\n      links.boxSizing)\n  }\n}\n\nexport function noListeners (interaction: Interact.Interaction, logger: Logger) {\n  const actionName = interaction.prepared.name\n  const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n  if (!moveListeners.length) {\n    logger.warn(\n      noListenersMessage,\n      actionName,\n      interaction.interactable)\n  }\n}\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  return styleRe.test(element.style[prop] || win.window.getComputedStyle(element)[prop])\n}\n\nfunction parentHasStyle (element: Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent)\n  }\n\n  return false\n}\n\nexport default {\n  id: 'dev-tools',\n  install,\n}\n","import { EventPhase } from '@interactjs/core/InteractEvent'\nimport modifiers from '@interactjs/modifiers/base'\nimport * as utils from '@interactjs/utils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  enum EventPhase {\n    Resume = 'resume',\n    InertiaStart = 'inertiastart',\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: {\n      active: boolean\n      smoothEnd: boolean\n      allowResume: boolean\n\n      startEvent?: Interact.InteractEvent\n      upCoords: {\n        page: Interact.Point\n        client: Interact.Point\n        timeStamp: number\n      }\n\n      xe?: number\n      ye?: number\n      sx?: number\n      sy?: number\n\n      t0?: number\n      te?: number\n      v0?: number\n      vx0?: number\n      vy0?: number\n      duration?: number\n      modifiedXe?: number\n      modifiedYe?: number\n\n      lambda_v0?: number // eslint-disable-line camelcase\n      one_ve_v0?: number // eslint-disable-line camelcase\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean,\n      resistance?: number,        // the lambda in exponential decay\n      minSpeed?: number,          // target speed must be above this for inertia to start\n      endSpeed?: number,          // the speed at which inertia is slow enough to stop\n      allowResume?: true,         // allow resuming an action in inertia phase\n      smoothEndDuration?: number, // animate to snap/restrict endOnly if there's no inertia\n    } | boolean // FIXME\n  }\n}\n\n(EventPhase as any).Resume = 'resume'\n; (EventPhase as any).InertiaStart = 'inertiastart'\n\nfunction install (scope: Interact.Scope) {\n  const {\n    interactions,\n    defaults,\n  } = scope\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.inertia = {\n      active     : false,\n      smoothEnd  : false,\n      allowResume: false,\n      upCoords   : {} as any,\n      timeout    : null,\n    }\n  })\n\n  // FIXME proper signal typing\n  interactions.signals.on('before-action-end', (arg) => release(arg as any, scope))\n  interactions.signals.on('down', (arg) => resume(arg as any, scope))\n  interactions.signals.on('stop', (arg) => stop(arg as any))\n\n  defaults.perAction.inertia = {\n    enabled          : false,\n    resistance       : 10,    // the lambda in exponential decay\n    minSpeed         : 100,   // target speed must be above this for inertia to start\n    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n    allowResume      : true,  // allow resuming an action in inertia phase\n    smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n  }\n\n  scope.usePlugin(modifiers)\n}\n\nfunction resume (\n  { interaction, event, pointer, eventTarget }: Interact.SignalArg,\n  scope: Interact.Scope\n) {\n  const state = interaction.inertia\n\n  // Check if the down event hits the current inertia target\n  if (state.active) {\n    let element = eventTarget\n\n    // climb up the DOM tree from the event target\n    while (utils.is.element(element)) {\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        raf.cancel(state.timeout)\n        state.active = false\n        interaction.simulation = null\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer, event, eventTarget, true)\n        utils.pointer.setCoords(\n          interaction.coords.cur,\n          interaction.pointers.map((p) => p.pointer),\n          interaction._now()\n        )\n\n        // fire appropriate signals\n        const signalArg = {\n          interaction,\n        }\n\n        scope.interactions.signals.fire('action-resume', signalArg)\n\n        // fire a reume event\n        const resumeEvent = new scope.InteractEvent(\n          interaction, event, interaction.prepared.name, EventPhase.Resume, interaction.element)\n\n        interaction._fireEvent(resumeEvent)\n\n        utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n        break\n      }\n\n      element = utils.dom.parentNode(element)\n    }\n  }\n}\n\nfunction release<T extends Interact.ActionName> (\n  { interaction, event, noPreEnd }: Interact.SignalArg,\n  scope: Interact.Scope\n) {\n  const state = interaction.inertia\n\n  if (!interaction.interacting() ||\n    (interaction.simulation && interaction.simulation.active) ||\n  noPreEnd) {\n    return null\n  }\n\n  const options = getOptions(interaction)\n\n  const now = interaction._now()\n  const { client: velocityClient } = interaction.coords.velocity\n  const pointerSpeed = utils.hypot(velocityClient.x, velocityClient.y)\n\n  let smoothEnd = false\n  let modifierResult: ReturnType<typeof modifiers.setAll>\n\n  // check if inertia should be started\n  const inertiaPossible = (options && options.enabled &&\n                     interaction.prepared.name !== 'gesture' &&\n                     event !== state.startEvent)\n\n  const inertia = (inertiaPossible &&\n    (now - interaction.coords.cur.timeStamp) < 50 &&\n    pointerSpeed > options.minSpeed &&\n    pointerSpeed > options.endSpeed)\n\n  const modifierArg = {\n    interaction,\n    pageCoords: utils.extend({}, interaction.coords.cur.page),\n    states: inertiaPossible && interaction.modifiers.states.map(\n      (modifierStatus) => utils.extend({}, modifierStatus)\n    ),\n    preEnd: true,\n    prevCoords: undefined,\n    requireEndOnly: null,\n  }\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifierArg.prevCoords = interaction.prevEvent.page\n    modifierArg.requireEndOnly = false\n    modifierResult = modifiers.setAll(modifierArg)\n\n    if (modifierResult.changed) {\n      smoothEnd = true\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return null }\n\n  utils.pointer.copyCoords(state.upCoords, interaction.coords.cur)\n\n  interaction.pointers[0].pointer = state.startEvent = new scope.InteractEvent(\n    interaction,\n    event,\n    // FIXME add proper typing Action.name\n    interaction.prepared.name as T,\n    EventPhase.InertiaStart,\n    interaction.element,\n  )\n\n  state.t0 = now\n\n  state.active = true\n  state.allowResume = options.allowResume\n  interaction.simulation = state\n\n  interaction.interactable.fire(state.startEvent)\n\n  if (inertia) {\n    state.vx0 = interaction.coords.velocity.client.x\n    state.vy0 = interaction.coords.velocity.client.y\n    state.v0 = pointerSpeed\n\n    calcInertia(interaction, state)\n\n    utils.extend(modifierArg.pageCoords, interaction.coords.cur.page)\n\n    modifierArg.pageCoords.x += state.xe\n    modifierArg.pageCoords.y += state.ye\n    modifierArg.prevCoords = undefined\n    modifierArg.requireEndOnly = true\n\n    modifierResult = modifiers.setAll(modifierArg)\n\n    state.modifiedXe += modifierResult.delta.x\n    state.modifiedYe += modifierResult.delta.y\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.smoothEnd = true\n    state.xe = modifierResult.delta.x\n    state.ye = modifierResult.delta.y\n\n    state.sx = state.sy = 0\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n\n  return false\n}\n\nfunction stop ({ interaction }: Interact.SignalArg) {\n  const state = interaction.inertia\n  if (state.active) {\n    raf.cancel(state.timeout)\n    state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction calcInertia (interaction: Interact.Interaction, state) {\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const inertiaDur = -Math.log(options.endSpeed / state.v0) / lambda\n\n  state.x0 = interaction.prevEvent.page.x\n  state.y0 = interaction.prevEvent.page.y\n  state.t0 = state.startEvent.timeStamp / 1000\n  state.sx = state.sy = 0\n\n  state.modifiedXe = state.xe = (state.vx0 - inertiaDur) / lambda\n  state.modifiedYe = state.ye = (state.vy0 - inertiaDur) / lambda\n  state.te = inertiaDur\n\n  state.lambda_v0 = lambda / state.v0\n  state.one_ve_v0 = 1 - options.endSpeed / state.v0\n}\n\nfunction inertiaTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n  utils.pointer.setCoordDeltas(interaction.coords.delta, interaction.coords.prev, interaction.coords.cur)\n  utils.pointer.setCoordVelocity(interaction.coords.velocity, interaction.coords.delta)\n\n  const state = interaction.inertia\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const t = interaction._now() / 1000 - state.t0\n\n  if (t < state.te) {\n    const progress =  1 - (Math.exp(-lambda * t) - state.lambda_v0) / state.one_ve_v0\n\n    if (state.modifiedXe === state.xe && state.modifiedYe === state.ye) {\n      state.sx = state.xe * progress\n      state.sy = state.ye * progress\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(\n        0, 0,\n        state.xe, state.ye,\n        state.modifiedXe, state.modifiedYe,\n        progress)\n\n      state.sx = quadPoint.x\n      state.sy = quadPoint.y\n    }\n\n    interaction.move()\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.sx = state.modifiedXe\n    state.sy = state.modifiedYe\n\n    interaction.move()\n    interaction.end(state.startEvent)\n    state.active = false\n    interaction.simulation = null\n  }\n\n  utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n}\n\nfunction smothEndTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n\n  const state = interaction.inertia\n  const t = interaction._now() - state.t0\n  const { smoothEndDuration: duration } = getOptions(interaction)\n\n  if (t < duration) {\n    state.sx = utils.easeOutQuad(t, 0, state.xe, duration)\n    state.sy = utils.easeOutQuad(t, 0, state.ye, duration)\n\n    interaction.move()\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n  else {\n    state.sx = state.xe\n    state.sy = state.ye\n\n    interaction.move()\n    interaction.end(state.startEvent)\n\n    state.smoothEnd =\n      state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction updateInertiaCoords (interaction: Interact.Interaction) {\n  const state = interaction.inertia\n\n  // return if inertia isn't running\n  if (!state.active) { return }\n\n  const pageUp   = state.upCoords.page\n  const clientUp = state.upCoords.client\n\n  utils.pointer.setCoords(interaction.coords.cur, [ {\n    pageX  : pageUp.x   + state.sx,\n    pageY  : pageUp.y   + state.sy,\n    clientX: clientUp.x + state.sx,\n    clientY: clientUp.y + state.sy,\n  } ], interaction._now())\n}\n\nfunction getOptions ({ interactable, prepared }: Interact.Interaction) {\n  return interactable &&\n    interactable.options &&\n    prepared.name &&\n    interactable.options[prepared.name].inertia\n}\n\nexport default {\n  id: 'inertia',\n  install,\n  calcInertia,\n  inertiaTick,\n  smothEndTick,\n  updateInertiaCoords,\n}\n","import * as actions from '@interactjs/actions'\nimport autoScroll from '@interactjs/auto-scroll'\nimport * as autoStart from '@interactjs/auto-start'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools'\nimport inertia from '@interactjs/inertia'\nimport * as modifiers from '@interactjs/modifiers'\nimport modifiersBase from '@interactjs/modifiers/base'\nimport * as pointerEvents from '@interactjs/pointer-events'\nimport reflow from '@interactjs/reflow'\nimport interact, { scope } from './interact'\n\nexport function init (window: Window): typeof interact {\n  scope.init(window)\n\n  interact.use(interactablePreventDefault)\n\n  // inertia\n  interact.use(inertia)\n\n  // pointerEvents\n  interact.use(pointerEvents)\n\n  // autoStart, hold\n  interact.use(autoStart)\n\n  // drag and drop, resize, gesture\n  interact.use(actions)\n\n  // snap, resize, etc.\n  interact.use(modifiersBase)\n\n  // for backwrads compatibility\n  for (const type in modifiers) {\n    const { _defaults, _methods } = modifiers[type]\n\n    _defaults._methods = _methods\n    scope.defaults.perAction[type] = _defaults\n  }\n\n  // autoScroll\n  interact.use(autoScroll)\n\n  // reflow\n  interact.use(reflow)\n\n  // eslint-disable-next-line no-undef\n  if (process.env.NODE_ENV !== 'production') {\n    interact.use(devTools)\n  }\n\n  return interact\n}\n\n// eslint-disable-next-line no-undef\ninteract.version = init.version = process.env.npm_package_version\n\nexport default interact\nexport {\n  interact,\n  actions,\n  autoScroll,\n  interactablePreventDefault,\n  inertia,\n  modifiersBase as modifiers,\n  pointerEvents,\n  reflow,\n}\n","/** @module interact */\n\nimport { Options } from '@interactjs/core/defaultOptions'\nimport Interactable from '@interactjs/core/Interactable'\nimport { Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\nimport browser from '@interactjs/utils/browser'\nimport events from '@interactjs/utils/events'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    interact: InteractStatic\n  }\n}\n\nexport interface InteractStatic {\n  (target: Interact.Target, options?: Options): Interactable\n  on: typeof on\n  pointerMoveTolerance: typeof pointerMoveTolerance\n  stop: typeof stop\n  supportsPointerEvent: typeof supportsPointerEvent\n  supportsTouch: typeof supportsTouch\n  debug: typeof debug\n  off: typeof off\n  isSet: typeof isSet\n  use: typeof use\n  getPointerAverage: typeof utils.pointer.pointerAverage\n  getTouchBBox: typeof utils.pointer.touchBBox\n  getTouchDistance: typeof utils.pointer.touchDistance\n  getTouchAngle: typeof utils.pointer.touchAngle\n  getElementRect: typeof utils.dom.getElementRect\n  getElementClientRect: typeof utils.dom.getElementClientRect\n  matchesSelector: typeof utils.dom.matchesSelector\n  closest: typeof utils.dom.closest\n  addDocument: typeof scope.addDocument\n  removeDocument: typeof scope.removeDocument\n  version: string\n}\n\nconst globalEvents: any = {}\nconst scope = new Scope()\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @global\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport const interact: InteractStatic = function interact (target: Interact.Target, options?: any) {\n  let interactable = scope.interactables.get(target, options)\n\n  if (!interactable) {\n    interactable = scope.interactables.new(target, options)\n    interactable.events.global = globalEvents\n  }\n\n  return interactable\n} as InteractStatic\n\n/**\n * Use a plugin\n *\n * @alias module:interact.use\n *\n * @param {Object} plugin\n * @param {function} plugin.install\n * @return {interact}\n */\ninteract.use = use\nfunction use (plugin: Interact.Plugin, options?: { [key: string]: any }) {\n  scope.usePlugin(plugin, options)\n\n  return interact\n}\n\n/**\n * Check if an element or selector has been set with the {@link interact}\n * function\n *\n * @alias module:interact.isSet\n *\n * @param {Element} element The Element being searched for\n * @return {boolean} Indicates if the element or CSS selector was previously\n * passed to interact\n */\ninteract.isSet = isSet\nfunction isSet (target: Element, options?: any) {\n  return !!scope.interactables.get(target, options && options.context)\n}\n\n/**\n * Add a global listener for an InteractEvent or adds a DOM event to `document`\n *\n * @alias module:interact.on\n *\n * @param {string | array | object} type The types of events to listen for\n * @param {function} listener The function event (s)\n * @param {object | boolean} [options] object or useCapture flag for\n * addEventListener\n * @return {object} interact\n */\ninteract.on = on\nfunction on (type: string | Interact.EventTypes, listener: Interact.ListenersArg, options?) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/)\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of (type as any[])) {\n      interact.on(eventType, listener, options)\n    }\n\n    return interact\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.on(prop, (type as Interact.EventTypes)[prop], listener)\n    }\n\n    return interact\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.arr.contains(scope.actions.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener]\n    }\n    else {\n      globalEvents[type].push(listener)\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener as Interact.Listener, { options })\n  }\n\n  return interact\n}\n\n/**\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n * @alias module:interact.off\n *\n * @param {string | array | object} type The types of events that were listened\n * for\n * @param {function} listener The listener function to be removed\n * @param {object | boolean} options [options] object or useCapture flag for\n * removeEventListener\n * @return {object} interact\n */\ninteract.off = off\nfunction off (type, listener, options) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/)\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, options)\n    }\n\n    return interact\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener)\n    }\n\n    return interact\n  }\n\n  if (!utils.arr.contains(scope.actions.eventTypes, type)) {\n    events.remove(scope.document, type, listener, options)\n  }\n  else {\n    let index\n\n    if (type in globalEvents &&\n        (index = globalEvents[type].indexOf(listener)) !== -1) {\n      globalEvents[type].splice(index, 1)\n    }\n  }\n\n  return interact\n}\n\n/**\n * Returns an object which exposes internal data\n * @alias module:interact.debug\n *\n * @return {object} An object with properties that outline the current state\n * and expose internal functions and variables\n */\ninteract.debug = debug\nfunction debug () {\n  return scope\n}\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointer.pointerAverage\ninteract.getTouchBBox       = utils.pointer.touchBBox\ninteract.getTouchDistance   = utils.pointer.touchDistance\ninteract.getTouchAngle      = utils.pointer.touchAngle\n\ninteract.getElementRect       = utils.dom.getElementRect\ninteract.getElementClientRect = utils.dom.getElementClientRect\ninteract.matchesSelector      = utils.dom.matchesSelector\ninteract.closest              = utils.dom.closest\n\n/**\n * @alias module:interact.supportsTouch\n *\n * @return {boolean} Whether or not the browser supports touch input\n */\ninteract.supportsTouch = supportsTouch\nfunction supportsTouch () {\n  return browser.supportsTouch\n}\n\n/**\n * @alias module:interact.supportsPointerEvent\n *\n * @return {boolean} Whether or not the browser supports PointerEvents\n */\ninteract.supportsPointerEvent = supportsPointerEvent\nfunction supportsPointerEvent () {\n  return browser.supportsPointerEvent\n}\n\n/**\n * Cancels all interactions (end events are not fired)\n *\n * @alias module:interact.stop\n *\n * @return {object} interact\n */\ninteract.stop = stop\nfunction stop () {\n  for (const interaction of scope.interactions.list) {\n    interaction.stop()\n  }\n\n  return interact\n}\n\n/**\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n * @alias module:interact.pointerMoveTolerance\n *\n * @param {number} [newValue] The movement from the start position must be greater than this value\n * @return {interact | number}\n */\ninteract.pointerMoveTolerance = pointerMoveTolerance\nfunction pointerMoveTolerance (newValue) {\n  if (utils.is.number(newValue)) {\n    scope.interactions.pointerMoveTolerance = newValue\n\n    return interact\n  }\n\n  return scope.interactions.pointerMoveTolerance\n}\n\nscope.interactables.signals.on('unset', ({ interactable }) => {\n  scope.interactables.list.splice(scope.interactables.list.indexOf(interactable), 1)\n\n  // Stop related interactions when an Interactable is unset\n  for (const interaction of scope.interactions.list) {\n    if (interaction.interactable === interactable && interaction.interacting() && interaction._ending) {\n      interaction.stop()\n    }\n  }\n})\n\ninteract.addDocument = (doc, options) => scope.addDocument(doc, options)\ninteract.removeDocument = (doc) => scope.removeDocument(doc)\n\nscope.interact = interact\n\nexport { scope }\nexport default interact\n","import interact, { init as initInteract } from '@interactjs/interact'\nimport * as modifiers from '@interactjs/modifiers'\nimport '@interactjs/types'\nimport extend from '@interactjs/utils/extend'\nimport * as snappers from '@interactjs/utils/snappers'\n\ndeclare module '@interactjs/interact/interact' {\n    interface InteractStatic {\n        modifiers?: any\n        snappers?: typeof snappers & { [key: string]: any }\n        createSnapGrid?: typeof snappers.grid\n    }\n}\n\nif (typeof window === 'object' && !!window) {\n  init(window)\n}\n\nexport function init (win: Window) {\n  initInteract(win)\n\n  return interact.use({\n    id: 'interactjs',\n    install (scope) {\n      interact.modifiers = extend(scope.modifiers, modifiers)\n      interact.snappers = snappers\n      interact.createSnapGrid = interact.snappers.grid\n    },\n  })\n}\n\nexport default interact\ninteract['default'] = interact // tslint:disable-line no-string-literal\ninteract['init'] = init // tslint:disable-line no-string-literal\n\nif (typeof module === 'object' && !!module) {\n  module.exports = interact\n}\n","import { Scope } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    modifiers?: any\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modifiers?: {\n      states: any[]\n      result?: {\n        delta: {\n          x: number\n          y: number\n        }\n        rectDelta: {\n          left: number\n          right: number\n          top: number\n          bottom: number\n        }\n        coords: Interact.Point\n        changed: boolean\n      }\n      [index: string]: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    modifiers?: Array<ReturnType<typeof makeModifier>>\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    interactions,\n  } = scope\n\n  scope.defaults.perAction.modifiers = []\n  scope.modifiers = {}\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.modifiers = {\n      startOffset: { left: 0, right: 0, top: 0, bottom: 0 },\n      offsets    : {},\n      states   : null,\n      result     : null,\n    }\n  })\n\n  interactions.signals.on('before-action-start', (arg) => {\n    start(arg as any, arg.interaction.coords.start.page, scope.modifiers)\n  })\n\n  interactions.signals.on('action-resume', (arg) => {\n    beforeMove(arg as any)\n    start(arg as any, arg.interaction.coords.cur.page, scope.modifiers)\n  })\n\n  interactions.signals.on('after-action-move', restoreCoords as any)\n  interactions.signals.on('before-action-move', beforeMove)\n\n  interactions.signals.on('before-action-start', setCoords)\n  interactions.signals.on('after-action-start', restoreCoords as any)\n\n  interactions.signals.on('before-action-end', beforeEnd)\n  interactions.signals.on('stop', stop)\n}\n\nfunction start (\n  { interaction, phase }: Interact.SignalArg,\n  pageCoords: Interact.Point,\n  registeredModifiers,\n) {\n  const { interactable, element } = interaction\n  const modifierList = getModifierList(interaction, registeredModifiers)\n  const states = prepareStates(modifierList)\n\n  const rect = extend({}, interaction.rect)\n\n  if (!('width'  in rect)) { rect.width  = rect.right  - rect.left }\n  if (!('height' in rect)) { rect.height = rect.bottom - rect.top  }\n\n  const startOffset = getRectOffset(rect, pageCoords)\n\n  interaction.modifiers.startOffset = startOffset\n  interaction.modifiers.startDelta = { x: 0, y: 0 }\n\n  const arg: Partial<Interact.SignalArg> = {\n    interaction,\n    interactable,\n    element,\n    pageCoords,\n    phase,\n    rect,\n    startOffset,\n    states,\n    preEnd: false,\n    requireEndOnly: false,\n  }\n\n  interaction.modifiers.states = states\n  interaction.modifiers.result = null\n  startAll(arg)\n\n  arg.pageCoords = extend({}, interaction.coords.start.page)\n\n  const result = interaction.modifiers.result = setAll(arg)\n\n  return result\n}\n\nexport function startAll (arg) {\n  for (const state of arg.states) {\n    if (state.methods.start) {\n      arg.state = state\n      state.methods.start(arg)\n    }\n  }\n}\n\nexport function setAll (arg: Partial<Interact.SignalArg>) {\n  const {\n    interaction,\n    modifiersState = interaction.modifiers,\n    prevCoords = modifiersState.result\n      ? modifiersState.result.coords\n      : interaction.coords.prev.page,\n    phase,\n    preEnd,\n    requireEndOnly,\n    rect,\n    skipModifiers,\n  } = arg\n\n  const states = skipModifiers\n    ? arg.states.slice(modifiersState.skip)\n    : arg.states\n\n  arg.coords = extend({}, arg.pageCoords)\n  arg.rect = extend({}, rect)\n\n  const result = {\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left  : 0,\n      right : 0,\n      top   : 0,\n      bottom: 0,\n    },\n    coords: arg.coords,\n    changed: true,\n  }\n\n  for (const state of states) {\n    const { options } = state\n\n    if (!state.methods.set ||\n      !shouldDo(options, preEnd, requireEndOnly, phase)) { continue }\n\n    arg.state = state\n    state.methods.set(arg)\n  }\n\n  result.delta.x = arg.coords.x - arg.pageCoords.x\n  result.delta.y = arg.coords.y - arg.pageCoords.y\n\n  let rectChanged = false\n\n  if (rect) {\n    result.rectDelta.left   = arg.rect.left - rect.left\n    result.rectDelta.right  = arg.rect.right - rect.right\n    result.rectDelta.top    = arg.rect.top - rect.top\n    result.rectDelta.bottom = arg.rect.bottom - rect.bottom\n\n    rectChanged = result.rectDelta.left !== 0 ||\n      result.rectDelta.right !== 0 ||\n      result.rectDelta.top !== 0 ||\n      result.rectDelta.bottom !== 0\n  }\n\n  result.changed = prevCoords.x !== result.coords.x ||\n    prevCoords.y !== result.coords.y ||\n    rectChanged\n\n  return result\n}\n\nfunction beforeMove (arg: Interact.SignalArg): void | false {\n  const { interaction, phase, preEnd, skipModifiers } = arg\n  const { interactable, element } = interaction\n  const modifierResult = setAll(\n    {\n      interaction,\n      interactable,\n      element,\n      preEnd,\n      phase,\n      pageCoords: interaction.coords.cur.page,\n      rect: interaction.rect,\n      states: interaction.modifiers.states,\n      requireEndOnly: false,\n      skipModifiers,\n    })\n\n  interaction.modifiers.result = modifierResult\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.changed && interaction.interacting()) {\n    return false\n  }\n\n  setCoords(arg)\n}\n\nfunction beforeEnd (arg): void | false {\n  const { interaction, event, noPreEnd } = arg\n  const states = interaction.modifiers.states\n\n  if (noPreEnd || !states || !states.length) {\n    return\n  }\n\n  let didPreEnd = false\n\n  for (const state of states) {\n    arg.state = state\n    const { options, methods } = state\n\n    const endResult = methods.beforeEnd && methods.beforeEnd(arg)\n\n    if (endResult === false) {\n      return false\n    }\n\n    // if the endOnly option is true for any modifier\n    if (!didPreEnd && shouldDo(options, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.move({ event, preEnd: true })\n      didPreEnd = true\n    }\n  }\n}\n\nfunction stop (arg) {\n  const { interaction } = arg\n  const states = interaction.modifiers.states\n\n  if (!states || !states.length) {\n    return\n  }\n\n  const modifierArg = extend({\n    states,\n    interactable: interaction.interactable,\n    element: interaction.element,\n  }, arg)\n\n  restoreCoords(arg)\n\n  for (const state of states) {\n    modifierArg.state = state\n\n    if (state.methods.stop) { state.methods.stop(modifierArg) }\n  }\n\n  arg.interaction.modifiers.states = null\n}\n\nfunction getModifierList (interaction, registeredModifiers) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n      .filter((modifier) => !modifier.options || modifier.options.enabled !== false)\n      .map((modifier) => {\n        if (!modifier.methods && modifier.type) {\n          return registeredModifiers[modifier.type](modifier)\n        }\n\n        return modifier\n      })\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return options && options.enabled && {\n        options,\n        methods: options._methods,\n      }\n    })\n    .filter((m) => !!m)\n}\n\nexport function prepareStates (modifierList) {\n  const states = []\n\n  for (let index = 0; index < modifierList.length; index++) {\n    const { options, methods, name } = modifierList[index]\n\n    if (options && options.enabled === false) { continue }\n\n    const state = {\n      options,\n      methods,\n      index,\n      name,\n    }\n\n    states.push(state)\n  }\n\n  return states\n}\n\nfunction setCoords (arg) {\n  const { interaction, phase } = arg\n  const curCoords = arg.curCoords || interaction.coords.cur\n  const startCoords = arg.startCoords || interaction.coords.start\n  const { result, startDelta } = interaction.modifiers\n  const curDelta = result.delta\n\n  if (phase === 'start') {\n    extend(interaction.modifiers.startDelta, result.delta)\n  }\n\n  for (const [coordsSet, delta] of [[startCoords, startDelta], [curCoords, curDelta]]) {\n    coordsSet.page.x   += delta.x\n    coordsSet.page.y   += delta.y\n    coordsSet.client.x += delta.x\n    coordsSet.client.y += delta.y\n  }\n\n  const { rectDelta } = interaction.modifiers.result\n  const rect = arg.rect || interaction.rect\n\n  rect.left   += rectDelta.left\n  rect.right  += rectDelta.right\n  rect.top    += rectDelta.top\n  rect.bottom += rectDelta.bottom\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n\nfunction restoreCoords ({ interaction: { coords, rect, modifiers } }: Interact.SignalArg) {\n  if (!modifiers.result) { return }\n\n  const { startDelta } = modifiers\n  const { delta: curDelta, rectDelta } = modifiers.result\n\n  for (const [coordsSet, delta] of [[coords.start, startDelta], [coords.cur, curDelta]]) {\n    coordsSet.page.x -= delta.x\n    coordsSet.page.y -= delta.y\n    coordsSet.client.x -= delta.x\n    coordsSet.client.y -= delta.y\n  }\n\n  rect.left -= rectDelta.left\n  rect.right -= rectDelta.right\n  rect.top -= rectDelta.top\n  rect.bottom -= rectDelta.bottom\n}\n\nfunction shouldDo (options, preEnd?: boolean, requireEndOnly?: boolean, phase?: string) {\n  return options\n    ? options.enabled !== false &&\n      (preEnd || !options.endOnly) &&\n      (!requireEndOnly || options.endOnly || options.alwaysOnEnd) &&\n      (options.setStart || phase !== 'start')\n    : !requireEndOnly\n}\n\nfunction getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left  : coords.x - rect.left,\n      top   : coords.y - rect.top,\n      right : rect.right  - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left  : 0,\n      top   : 0,\n      right : 0,\n      bottom: 0,\n    }\n}\n\nfunction makeModifier<Options extends { [key: string]: any }> (module: { defaults: Options, [key: string]: any }, name?: string) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (options?: Partial<Options>) => {\n    options = options || {}\n\n    // add missing defaults to options\n    options.enabled = options.enabled !== false\n\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        options[prop] = defaults[prop]\n      }\n    }\n\n    return { options, methods, name }\n  }\n\n  if (typeof name === 'string') {\n    Object.defineProperty(\n      modifier,\n      'name',\n      { value: name })\n\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport default {\n  id: 'modifiers/base',\n  install,\n  startAll,\n  setAll,\n  prepareStates,\n  start,\n  beforeMove,\n  beforeEnd,\n  stop,\n  shouldDo,\n  getModifierList,\n  getRectOffset,\n  makeModifier,\n} as Interact.Plugin\n\nexport {\n  makeModifier,\n}\n","import base from './base'\nimport restrictEdgesModule from './restrict/edges'\nimport restrictModule from './restrict/pointer'\nimport restrictSizeModule from './restrict/size'\nimport snapEdgesModule from './snap/edges'\nimport snapModule from './snap/pointer'\nimport snapSizeModule from './snap/size'\n\nconst { makeModifier } = base\n\nexport const snap = makeModifier(snapModule, 'snap')\nexport const snapSize = makeModifier(snapSizeModule, 'snapSize')\nexport const snapEdges = makeModifier(snapEdgesModule, 'snapEdges')\nexport const restrict = makeModifier(restrictModule, 'restrict')\nexport const restrictEdges = makeModifier(restrictEdgesModule, 'restrictEdges')\nexport const restrictSize = makeModifier(restrictSizeModule, 'restrictSize')\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport Interaction from '@interactjs/core/Interaction'\nimport extend from '@interactjs/utils/extend'\nimport rectUtils from '@interactjs/utils/rect'\nimport restrict from './pointer'\n\nconst { getRestrictionRect } = restrict\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, state }: { interaction: Interaction, state: any }) {\n  const { options } = state\n  const startOffset = interaction.modifiers.startOffset\n  let offset\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top:    offset.y + startOffset.top,\n    left:   offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right:  offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, interaction, state }: {\n  coords: Interact.Point,\n  interaction: Interaction,\n  state: any\n}) {\n  const { offset, options } = state\n  const edges = interaction.prepared._linkedEdges || interaction.prepared.edges\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || {}\n  const outer = getRestrictionRect(options.outer, interaction, page) || {}\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top    + offset.top,    page.y), inner.top    + offset.top)\n  }\n  else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left   + offset.left,   page.x), inner.left   + offset.left)\n  }\n  else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right  + offset.right,  page.x), inner.right  + offset.right)\n  }\n}\n\nfunction fixRect (rect, defaults) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  getRestrictionRect,\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    inner: null,\n    outer: null,\n    offset: null,\n  },\n}\n\nexport default restrictEdges\n","import * as is from '@interactjs/utils/is'\nimport rectUtils from '@interactjs/utils/rect'\n\nfunction start ({ rect, startOffset, state }) {\n  const { options } = state\n  const { elementRect } = options\n  const offset = {} as { [key: string]: number }\n\n  if (rect && elementRect) {\n    offset.left = startOffset.left - (rect.width  * elementRect.left)\n    offset.top  = startOffset.top  - (rect.height * elementRect.top)\n\n    offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right))\n    offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom))\n  }\n  else {\n    offset.left = offset.top = offset.right = offset.bottom = 0\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) { return state }\n\n  const rect = restriction\n\n  // object is assumed to have\n  // x, y, width, height or\n  // left, top, right, bottom\n  if ('x' in restriction && 'y' in restriction) {\n    coords.x = Math.max(Math.min(rect.x + rect.width  - offset.right, coords.x), rect.x + offset.left)\n    coords.y = Math.max(Math.min(rect.y + rect.height - offset.bottom, coords.y), rect.y + offset.top)\n  }\n  else {\n    coords.x = Math.max(Math.min(rect.right  - offset.right, coords.x), rect.left + offset.left)\n    coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top  + offset.top)\n  }\n}\n\nfunction getRestrictionRect (value, interaction, coords?: Interact.Point) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [coords.x, coords.y, interaction])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst restrict = {\n  start,\n  set,\n  getRestrictionRect,\n  defaults: {\n    enabled: false,\n    restriction: null,\n    elementRect: null,\n  },\n}\n\nexport default restrict\n","// This module adds the options.resize.restrictSize setting which sets min and\n// max width and height for the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictSize: {\n//     min: { width: -600, height: -600 },\n//     max: { width:  600, height:  600 },\n//   },\n// })\n\nimport extend from '@interactjs/utils/extend'\nimport rectUtils from '@interactjs/utils/rect'\nimport restrictEdges from './edges'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nfunction start (arg) {\n  return restrictEdges.start(arg)\n}\n\nfunction set (arg) {\n  const { interaction, state } = arg\n  const { options } = state\n  const edges = interaction.prepared.linkedEdges || interaction.prepared.edges\n\n  if (!edges) {\n    return\n  }\n\n  const rect = rectUtils.xywhToTlbr(interaction.resizeRects.inverted)\n\n  const minSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.min, interaction)) || noMin\n  const maxSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.max, interaction)) || noMax\n\n  state.options = {\n    enabled: options.enabled,\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  }\n  else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  }\n  else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    min: null,\n    max: null,\n  },\n}\n\nexport default restrictSize\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport snapSize from './size'\n\nfunction start (arg) {\n  const edges = arg.interaction.prepared.edges\n\n  if (!edges) { return null }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nfunction set (arg) {\n  return snapSize.set(arg)\n}\n\nconst snapEdges = {\n  start,\n  set,\n  defaults: extend(clone(snapSize.defaults), {\n    offset: { x: 0, y: 0 },\n  }),\n}\n\nexport default snapEdges\n","import * as utils from '@interactjs/utils'\n\nfunction start (arg: Interact.SignalArg) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const offsets = []\n  const origin = options.offsetWithOrigin\n    ? getOrigin(arg)\n    : { x: 0, y: 0 }\n\n  let snapOffset\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  }\n  else  {\n    const offsetRect = utils.rect.resolveRectLike(options.offset, interactable, element, [interaction])\n\n    snapOffset = utils.rect.rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const relativePoints = options.relativePoints || []\n\n  if (rect && options.relativePoints && options.relativePoints.length) {\n    for (let index = 0; index < relativePoints.length; index++) {\n      const relativePoint = relativePoints[index]\n\n      offsets.push({\n        index,\n        relativePoint,\n        x: startOffset.left - (rect.width  * relativePoint.x) + snapOffset.x,\n        y: startOffset.top  - (rect.height * relativePoint.y) + snapOffset.y,\n      })\n    }\n  }\n  else {\n    offsets.push(utils.extend({\n      index: 0,\n      relativePoint: null,\n    }, snapOffset))\n  }\n\n  state.offsets = offsets\n}\n\nfunction set (arg: Interact.SignalArg) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = utils.getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = utils.extend({}, coords)\n  const targets = []\n  let target\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  state.realX = page.x\n  state.realY = page.y\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      if (utils.is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction, offset, index)\n      }\n      else {\n        target = snapTarget\n      }\n\n      if (!target) { continue }\n\n      targets.push({\n        x: (utils.is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (utils.is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: utils.is.number(target.range) ? target.range : options.range,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    dx: 0,\n    dy: 0,\n  }\n\n  for (let i = 0, len = targets.length; i < len; i++) {\n    target = targets[i]\n\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = utils.hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (!closest.target || (inRange\n      // is the closest target in range?\n      ? (closest.inRange && range !== Infinity\n        // the pointer is relatively deeper in this target\n        ? distance / range < closest.distance / closest.range\n        // this target has Infinite range and the closest doesn't\n        : (range === Infinity && closest.range !== Infinity) ||\n          // OR this target is closer that the previous closest\n          distance < closest.distance)\n      // The other is not in range and the pointer is closer to this target\n      : (!closest.inRange && distance < closest.distance))) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.dx = dx\n      closest.dy = dy\n\n      state.range = range\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n}\n\nfunction getOrigin (arg: Partial<Interact.SignalArg>) {\n  const optionsOrigin = utils.rect.rectToXY(\n    utils.rect.resolveRectLike(arg.state.options.origin)\n  )\n  const origin = optionsOrigin || utils.getOriginXY(\n    arg.interactable,\n    arg.interaction.element,\n    arg.interaction.prepared.name,\n  )\n\n  return origin\n}\n\nconst snap = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    range  : Infinity,\n    targets: null,\n    offset: null,\n    offsetWithOrigin: true,\n\n    relativePoints: null,\n  },\n}\n\nexport default snap\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\nimport snap from './pointer'\n\nfunction start (arg) {\n  const { interaction, state } = arg\n  const { options } = state\n  const edges = interaction.prepared.edges\n\n  if (!edges) { return null }\n\n  arg.state = {\n    options: {\n      relativePoints: [{\n        x: edges.left ? 0 : 1,\n        y: edges.top ? 0 : 1,\n      }],\n      origin: { x: 0, y: 0 },\n      offset: options.offset || 'self',\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of (options.targets || [])) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    }\n    else {\n      target = snapTarget\n    }\n\n    if (!target) { continue }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  snap.set(arg)\n\n  state.options = options\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    range  : Infinity,\n    targets: null,\n    offset: null,\n  },\n}\n\nexport default snapSize\n","import BaseEvent from '@interactjs/core/BaseEvent'\nimport pointerUtils from '@interactjs/utils/pointerUtils'\n\n/** */\nexport default class PointerEvent<T extends string> extends BaseEvent {\n  type: T\n  originalEvent: Interact.PointerEventType\n  pointerId: number\n  pointerType: string\n  double: boolean\n  pageX: number\n  pageY: number\n  clientX: number\n  clientY: number\n  dt: number\n  eventable: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: Interact.PointerType | PointerEvent<any>,\n    event: Interact.PointerEventType,\n    eventTarget: Interact.EventTarget,\n    interaction: Interact.Interaction,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp     = timeStamp\n    this.originalEvent = event\n    this.type          = type\n    this.pointerId     = pointerUtils.getPointerId(pointer)\n    this.pointerType   = pointerUtils.getPointerType(pointer)\n    this.target        = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double = !!(interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500)\n    }\n    else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }) {\n    this.pageX   -= originX\n    this.pageY   -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }) {\n    this.pageX   += originX\n    this.pageY   += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n","import { PerActionDefaults } from '@interactjs/core/defaultOptions'\nimport Eventable from '@interactjs/core/Eventable'\nimport Interaction from '@interactjs/core/Interaction'\nimport { Scope } from '@interactjs/core/scope'\nimport * as utils from '@interactjs/utils'\nimport PointerEvent from './PointerEvent'\n\ntype EventTargetList = Array<{\n  eventable: Eventable,\n  element: Interact.EventTarget,\n  props: { [key: string]: any },\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number,\n  ignoreFrom?: any,\n  allowFrom?: any,\n  origin?: Interact.Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    pointerEvents: Interact.Options\n  }\n}\n\nconst signals       = new utils.Signals()\nconst simpleSignals = [ 'down', 'up', 'cancel' ]\nconst simpleEvents  = [ 'down', 'up', 'cancel' ]\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom  : null,\n  allowFrom   : null,\n  origin      : { x: 0, y: 0 },\n}\n\nconst pointerEvents = {\n  id: 'pointer-events/base',\n  install,\n  signals,\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  createSignalListener,\n  defaults,\n  types: [\n    'down',\n    'move',\n    'up',\n    'cancel',\n    'tap',\n    'doubletap',\n    'hold',\n  ],\n}\n\nfunction fire<T extends string> (arg: {\n  interaction: Interaction,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  eventTarget: Interact.EventTarget,\n  targets?: EventTargetList,\n  pointerEvent?: PointerEvent<T>,\n  type: T\n}, scope: Interact.Scope) {\n  const {\n    interaction, pointer, event, eventTarget,\n    type = (arg as any).pointerEvent.type,\n    targets = collectEventTargets(arg),\n  } = arg\n\n  const {\n    pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now()),\n  } = arg\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      (pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = utils.getOriginXY(target.eventable, target.element)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.element\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (pointerEvent.immediatePropagationStopped ||\n        (pointerEvent.propagationStopped &&\n            (i + 1) < targets.length && targets[i + 1].element !== pointerEvent.currentTarget)) {\n      break\n    }\n  }\n\n  signals.fire('fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire({\n        interaction,\n        pointer,\n        event,\n        eventTarget,\n        type: 'doubletap',\n      }, scope)\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> ({ interaction, pointer, event, eventTarget, type }: {\n  interaction: Interaction,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  eventTarget: Interact.EventTarget,\n  type: T\n}) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (type === 'tap' && (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))) {\n    return []\n  }\n\n  const path = utils.dom.getPath(eventTarget)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    element: null,\n  }\n\n  for (const element of path) {\n    signalArg.element = element\n\n    signals.fire('collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter((target) =>\n      target.eventable.options.holdDuration === interaction.pointers[pointerIndex].hold.duration)\n  }\n\n  return signalArg.targets\n}\n\nfunction install (scope: Scope) {\n  const {\n    interactions,\n  } = scope\n\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n\n  interactions.signals.on('new', ({ interaction }) => {\n    interaction.prevTap    = null  // the most recent tap event on this interaction\n    interaction.tapTime    = 0     // time of the most recent tap event\n  })\n\n  interactions.signals.on('update-pointer', ({ down, pointerInfo }) => {\n    if (!down && pointerInfo.hold) {\n      return\n    }\n\n    pointerInfo.hold = { duration: Infinity, timeout: null }\n  })\n\n  interactions.signals.on('move', ({ interaction, pointer, event, eventTarget, duplicateMove }) => {\n    const pointerIndex = interaction.getPointerIndex(pointer)\n\n    if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n      if (interaction.pointerIsDown) {\n        clearTimeout(interaction.pointers[pointerIndex].hold.timeout)\n      }\n\n      fire({\n        interaction,\n        pointer,\n        event,\n        eventTarget,\n        type: 'move',\n      }, scope)\n    }\n  })\n\n  interactions.signals.on('down', ({ interaction, pointer, event, eventTarget, pointerIndex }) => {\n    const timer = interaction.pointers[pointerIndex].hold\n    const path = utils.dom.getPath(eventTarget)\n    const signalArg = {\n      interaction,\n      pointer,\n      event,\n      eventTarget,\n      type: 'hold',\n      targets: [] as EventTargetList,\n      path,\n      element: null,\n    }\n\n    for (const element of path) {\n      signalArg.element = element\n\n      signals.fire('collect-targets', signalArg)\n    }\n\n    if (!signalArg.targets.length) { return }\n\n    let minDuration = Infinity\n\n    for (const target of signalArg.targets) {\n      const holdDuration = target.eventable.options.holdDuration\n\n      if (holdDuration < minDuration) {\n        minDuration = holdDuration\n      }\n    }\n\n    timer.duration = minDuration\n    timer.timeout = setTimeout(() => {\n      fire({\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      }, scope)\n    }, minDuration)\n  })\n\n  for (const signalName of ['up', 'cancel']) {\n    interactions.signals.on(signalName, ({ interaction, pointerIndex }) => {\n      if (interaction.pointers[pointerIndex].hold) {\n        clearTimeout(interaction.pointers[pointerIndex].hold.timeout)\n      }\n    })\n  }\n\n  for (let i = 0; i < simpleSignals.length; i++) {\n    interactions.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i], scope))\n  }\n\n  interactions.signals.on('up', ({ interaction, pointer, event, eventTarget }) => {\n    if (!interaction.pointerWasMoved) {\n      fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n    }\n  })\n}\n\nfunction createSignalListener (type: string, scope) {\n  return function ({ interaction, pointer, event, eventTarget }: any) {\n    fire({ interaction, eventTarget, pointer, event, type }, scope)\n  }\n}\n\nexport default pointerEvents\n","import basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    pointerEvents,\n    interactions,\n  } = scope\n\n  scope.usePlugin(basePlugin)\n\n  pointerEvents.signals.on('new', onNew)\n  pointerEvents.signals.on('fired', (arg) => onFired(arg as any, scope))\n\n  for (const signal of ['move', 'up', 'cancel', 'endall']) {\n    interactions.signals.on(signal, endHoldRepeat)\n  }\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.push('holdrepeat')\n}\n\nfunction onNew ({ pointerEvent }) {\n  if (pointerEvent.type !== 'hold') { return }\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: Interact.SignalArg,\n  scope: Interact.Scope\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) { return }\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) { return }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire({\n      interaction,\n      eventTarget,\n      type: 'hold',\n      pointer: pointerEvent,\n      event: pointerEvent,\n    }, scope)\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nexport default {\n  id: 'pointer-events/holdRepeat',\n  install,\n} as Interact.Plugin\n","import pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nfunction install (scope) {\n  scope.usePlugin(pointerEvents)\n  scope.usePlugin(holdRepeat)\n  scope.usePlugin(interactableTargets)\n}\n\nconst id = 'pointer-events'\n\nexport { id, pointerEvents, holdRepeat, interactableTargets, install }\n","import { Scope } from '@interactjs/core/scope'\nimport { merge } from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport * as is from '@interactjs/utils/is'\ntype Interactable = import ('@interactjs/core/Interactable').default\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    pointerEvents,\n    actions,\n    Interactable,\n    interactables,\n  } = scope\n\n  pointerEvents.signals.on('collect-targets', ({ targets, element, type, eventTarget }: any) => {\n    scope.interactables.forEachMatch(element, (interactable: Interactable) => {\n      const eventable = interactable.events\n      const options = eventable.options\n\n      if (\n        eventable.types[type] &&\n        eventable.types[type].length &&\n        is.element(element) &&\n        interactable.testIgnoreAllow(options, element, eventTarget)) {\n        targets.push({\n          element,\n          eventable,\n          props: { interactable },\n        })\n      }\n    })\n  })\n\n  interactables.signals.on('new', ({ interactable }) => {\n    interactable.events.getRect = function (element: Element) {\n      return interactable.getRect(element)\n    }\n  })\n\n  interactables.signals.on('set', ({ interactable, options }) => {\n    extend(interactable.events.options, pointerEvents.defaults)\n    extend(interactable.events.options, options.pointerEvents || {})\n  })\n\n  merge(actions.eventTypes, pointerEvents.types)\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nexport default {\n  id: 'pointer-events/interactableTargets',\n  install,\n}\n","import Interactable from '@interactjs/core/Interactable'\nimport { EventPhase } from '@interactjs/core/InteractEvent'\nimport { ActionProps, Interaction } from '@interactjs/core/Interaction'\nimport { Scope } from '@interactjs/core/scope'\nimport { arr, extend, is, pointer as pointerUtils, rect as rectUtils, win } from '@interactjs/utils'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: (action: ActionProps) => ReturnType<typeof reflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: () => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  enum EventPhase {\n    Reflow = 'reflow',\n  }\n}\n\n(EventPhase as any).Reflow = 'reflow'\n\nexport function install (scope: Scope) {\n  const {\n    actions,\n    interactions,\n    /** @lends Interactable */\n    // eslint-disable-next-line no-shadow\n    Interactable,\n  } = scope\n\n  // add action reflow event types\n  for (const actionName of actions.names) {\n    actions.eventTypes.push(`${actionName}reflow`)\n  }\n\n  // remove completed reflow interactions\n  interactions.signals.on('stop', ({ interaction }) => {\n    if (interaction.pointerType === EventPhase.Reflow) {\n      if (interaction._reflowResolve) {\n        interaction._reflowResolve()\n      }\n\n      arr.remove(scope.interactions.list, interaction)\n    }\n  })\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise<Interactable> }\n   */\n  Interactable.prototype.reflow = function (action) {\n    return reflow(this, action, scope)\n  }\n}\n\nfunction reflow (interactable: Interactable, action: ActionProps, scope: Scope): Promise<Interactable> {\n  const elements = is.string(interactable.target)\n    ? arr.from(interactable._context.querySelectorAll(interactable.target))\n    : [interactable.target]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (win.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element)\n\n    if (!rect) { break }\n\n    const runningInteraction = arr.find(\n      scope.interactions.list,\n      (interaction: Interaction) => {\n        return interaction.interacting() &&\n          interaction.interactable === interactable &&\n          interaction.element === element &&\n          interaction.prepared.name === action.name\n      })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise = runningInteraction._reflowPromise || new Promise((resolve: any) => {\n          runningInteraction._reflowResolve = resolve\n        })\n      }\n    }\n    else {\n      const xywh = rectUtils.tlbrToXywh(rect)\n      const coords = {\n        page     : { x: xywh.x, y: xywh.y },\n        client   : { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow (scope: Scope, interactable: Interactable, element: Element, action: ActionProps, event: any) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: EventPhase.Reflow,\n  }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prepared = extend({}, action)\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n\n  interaction._doPhase(signalArg)\n\n  const reflowPromise = (win.window as unknown as any).Promise\n    ? new (win.window as unknown as any).Promise((resolve: any) => {\n      interaction._reflowResolve = resolve\n    })\n    : null\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  }\n  else {\n    interaction.stop()\n  }\n\n  interaction.removePointer(event, event)\n  interaction.pointerIsDown = false\n\n  return reflowPromise\n}\n\nexport default {\n  id: 'reflow',\n  install,\n} as Interact.Plugin\n","/// <reference path=\"./types.d.ts\" />\n","export type SignalListener = (signalArg: PartialSignalArg, sinalName?: string) => (void | boolean)\n\nexport interface SignalArg<T extends Interact.ActionName = any> {\n  interaction: Interact.Interaction<T>\n  Interactable: Interact.Interactable\n  iEvent: Interact.InteractEvent<T>\n  element: Interact.EventTarget\n  coords: Interact.Point\n  event: Interact.PointerEventType\n  phase: Interact.EventPhase\n  [index: string]: any\n}\n\nexport type PartialSignalArg = Partial<SignalArg>\n\nclass Signals {\n  listeners: {\n    [signalName: string]: SignalListener[],\n  } = {}\n\n  on (name: string, listener: SignalListener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener]\n      return\n    }\n\n    this.listeners[name].push(listener)\n  }\n\n  off (name: string, listener: SignalListener) {\n    if (!this.listeners[name]) { return }\n\n    const index = this.listeners[name].indexOf(listener)\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1)\n    }\n  }\n\n  fire (name: string, arg: Partial<SignalArg>): void | false {\n    const targetListeners = this.listeners[name]\n\n    if (!targetListeners) { return }\n\n    for (const listener of targetListeners) {\n      if (listener(arg, name) === false) {\n        return false\n      }\n    }\n  }\n}\n\nexport default Signals\n","export function contains (array, target) {\n  return array.indexOf(target) !== -1\n}\n\nexport function remove (array, target) {\n  return array.splice(array.indexOf(target), 1)\n}\n\nexport function merge (target, source) {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport function from (source) {\n  return merge([], source)\n}\n\nexport function findIndex (array, func) {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport function find (array, func) {\n  return array[findIndex(array, func)]\n}\n\nexport function some (array, func) {\n  return findIndex(array, func) !== -1\n}\n","import domObjects from './domObjects'\nimport * as is from './is'\nimport win from './window'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as string,\n  pEventTypes: null as {\n    up: string,\n    down: string,\n    over: string,\n    out: string,\n    move: string,\n    cancel: string,\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window) {\n  const Element = domObjects.Element\n  const navigator  = win.window.navigator\n\n  // Does the browser support touch input?\n  browser.supportsTouch = ('ontouchstart' in window) ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = navigator.pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = (/iP(hone|od|ad)/.test(navigator.platform))\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = (/iP(hone|od|ad)/.test(navigator.platform) &&\n           /OS 7[^\\d]/.test(navigator.appVersion))\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile = (navigator.appName === 'Opera' &&\n    browser.supportsTouch &&\n    /Presto/.test(navigator.userAgent))\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = 'matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector'\n\n  browser.pEventTypes = (browser.supportsPointerEvent\n    ? (domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up:     'MSPointerUp',\n        down:   'MSPointerDown',\n        over:   'mouseover',\n        out:    'mouseout',\n        move:   'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up:     'pointerup',\n        down:   'pointerdown',\n        over:   'pointerover',\n        out:    'pointerout',\n        move:   'pointermove',\n        cancel: 'pointercancel',\n      })\n    : null)\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import * as arr from './arr'\nimport * as is from './is'\n\nexport default function clone<T extends { [key: string]: any }> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    }\n    else if (is.array(value)) {\n      dest[prop] = arr.from(value)\n    }\n    else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","const domObjects: {\n  init: any,\n  document: Document,\n  DocumentFragment: typeof DocumentFragment,\n  SVGElement: typeof SVGElement,\n  SVGSVGElement: typeof SVGSVGElement,\n  SVGElementInstance: any,\n  Element: typeof Element,\n  HTMLElement: typeof HTMLElement,\n  Event: typeof Event,\n  Touch: typeof Touch,\n  PointerEvent: typeof PointerEvent,\n} =\n{\n  init,\n  document: null as any,\n  DocumentFragment: null as any,\n  SVGElement: null as any,\n  SVGSVGElement: null as any,\n  // eslint-disable-next-line no-undef\n  SVGElementInstance: null as any,\n  Element: null as any,\n  HTMLElement: null as any,\n  Event: null as any,\n  Touch: null as any,\n  PointerEvent: null as any,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document           = win.document\n  domObjects.DocumentFragment   = win.DocumentFragment   || blank\n  domObjects.SVGElement         = win.SVGElement         || blank\n  domObjects.SVGSVGElement      = win.SVGSVGElement      || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element            = win.Element            || blank\n  domObjects.HTMLElement        = win.HTMLElement        || domObjects.Element\n\n  domObjects.Event        = win.Event\n  domObjects.Touch        = win.Touch || blank\n  domObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent)\n}\n","import browser from './browser'\nimport domObjects from './domObjects'\nimport * as is from './is'\nimport win from './window'\n\nexport function nodeContains (parent, child) {\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = child.parentNode\n  }\n\n  return false\n}\n\nexport function closest (element, selector) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) { return element }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element, selector) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements) {\n  let deepestZoneParents = []\n  let dropzoneParents = []\n  let dropzone\n  let deepestZone = elements[0]\n  let index = deepestZone ? 0 : -1\n  let parent\n  let child\n  let i\n  let n\n\n  for (i = 1; i < elements.length; i++) {\n    dropzone = elements[i]\n\n    // an element might belong to multiple selector dropzones\n    if (!dropzone || dropzone === deepestZone) {\n      continue\n    }\n\n    if (!deepestZone) {\n      deepestZone = dropzone\n      index = i\n      continue\n    }\n\n    // check if the deepest or current are document.documentElement or document.rootElement\n    // - if the current dropzone is, do nothing and continue\n    if (dropzone.parentNode === dropzone.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current dropzone and continue to next\n    else if (deepestZone.parentNode === dropzone.ownerDocument) {\n      deepestZone = dropzone\n      index = i\n      continue\n    }\n\n    if (!deepestZoneParents.length) {\n      parent = deepestZone\n      while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n        deepestZoneParents.unshift(parent)\n        parent = parent.parentNode\n      }\n    }\n\n    // if this element is an svg element and the current deepest is\n    // an HTMLElement\n    if (deepestZone instanceof domObjects.HTMLElement &&\n        dropzone instanceof domObjects.SVGElement &&\n        !(dropzone instanceof domObjects.SVGSVGElement)) {\n      if (dropzone === deepestZone.parentNode) {\n        continue\n      }\n\n      parent = dropzone.ownerSVGElement\n    }\n    else {\n      parent = dropzone\n    }\n\n    dropzoneParents = []\n\n    while (parent.parentNode !== parent.ownerDocument) {\n      dropzoneParents.unshift(parent)\n      parent = parent.parentNode\n    }\n\n    n = 0\n\n    // get (position of last common ancestor) + 1\n    while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n      n++\n    }\n\n    const parents = [\n      dropzoneParents[n - 1],\n      dropzoneParents[n],\n      deepestZoneParents[n],\n    ]\n\n    child = parents[0].lastChild\n\n    while (child) {\n      if (child === parents[1]) {\n        deepestZone = dropzone\n        index = i\n        deepestZoneParents = []\n\n        break\n      }\n      else if (child === parents[2]) {\n        break\n      }\n\n      child = child.previousSibling\n    }\n  }\n\n  return index\n}\n\nexport function matchesUpTo (element, selector, limit) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element)\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element) {\n  return (element instanceof domObjects.SVGElementInstance\n    ? element.correspondingUseElement\n    : element)\n}\n\nexport function getScrollXY (relevantWindow) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element) {\n  const clientRect = (element instanceof domObjects.SVGElement\n    ? element.getBoundingClientRect()\n    : element.getClientRects()[0])\n\n  return clientRect && {\n    left  : clientRect.left,\n    right : clientRect.right,\n    top   : clientRect.top,\n    bottom: clientRect.bottom,\n    width : clientRect.width  || clientRect.right  - clientRect.left,\n    height: clientRect.height || clientRect.bottom - clientRect.top,\n  }\n}\n\nexport function getElementRect (element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left   += scroll.x\n    clientRect.right  += scroll.x\n    clientRect.top    += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (element) {\n  const path = []\n\n  while (element) {\n    path.push(element)\n    element = parentNode(element)\n  }\n\n  return path\n}\n\nexport function trySelector (value) {\n  if (!is.string(value)) { return false }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","import { contains } from './arr'\nimport * as domUtils from './domUtils'\nimport * as is from './is'\nimport pExtend from './pointerExtend'\nimport pointerUtils from './pointerUtils'\n\ntype Listener = (event: Event | FakeEvent) => any\n\nconst elements: EventTarget[] = []\nconst targets: Array<{\n  events: { [type: string]: Listener[] },\n  typeCount: number,\n}> = []\n\nconst delegatedEvents: {\n  [type: string]: {\n    selectors: string[],\n    contexts: EventTarget[],\n    listeners: Array<Array<[Listener, boolean, boolean]>>,\n  },\n} = {}\nconst documents: Document[] = []\n\nfunction add (element: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n  const options = getOptions(optionalArg)\n  let elementIndex = elements.indexOf(element)\n  let target = targets[elementIndex]\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    }\n\n    elementIndex = elements.push(element) - 1\n    targets.push(target)\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = []\n    target.typeCount++\n  }\n\n  if (!contains(target.events[type], listener)) {\n    element.addEventListener(type, listener as any, events.supportsOptions ? options : !!options.capture)\n    target.events[type].push(listener)\n  }\n}\n\nfunction remove (element: EventTarget, type: string, listener?: 'all' | Listener, optionalArg?: boolean | any) {\n  const options = getOptions(optionalArg)\n  const elementIndex = elements.indexOf(element)\n  const target = targets[elementIndex]\n\n  if (!target || !target.events) {\n    return\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all')\n      }\n    }\n    return\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], options)\n      }\n      return\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element.removeEventListener(type, listener as any, events.supportsOptions ? options : !!options.capture)\n          target.events[type].splice(i, 1)\n\n          break\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      (target.events[type] as any) = null\n      target.typeCount--\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1)\n    elements.splice(elementIndex, 1)\n  }\n}\n\nfunction addDelegate (selector: string, context: EventTarget, type: string, listener: Listener, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      contexts : [],\n      listeners: [],\n      selectors: [],\n    }\n\n    // add delegate listener functions\n    for (const doc of documents) {\n      add(doc, type, delegateListener)\n      add(doc, type, delegateUseCapture, true)\n    }\n  }\n\n  const delegated = delegatedEvents[type]\n  let index\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector &&\n        delegated.contexts[index] === context) {\n      break\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length\n\n    delegated.selectors.push(selector)\n    delegated.contexts.push(context)\n    delegated.listeners.push([])\n  }\n\n  // keep listener and capture and passive flags\n  delegated.listeners[index].push([listener, !!options.capture, options.passive])\n}\n\nfunction removeDelegate (selector, context, type, listener?, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  const delegated = delegatedEvents[type]\n  let matchFound = false\n  let index\n\n  if (!delegated) { return }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector &&\n        delegated.contexts[index] === context) {\n      const listeners = delegated.listeners[index]\n\n      // each item of the listeners array is an array: [function, capture, passive]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const [fn, capture, passive] = listeners[i]\n\n        // check if the listener functions and capture and passive flags match\n        if (fn === listener && capture === !!options.capture && passive === options.passive) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1)\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1)\n            delegated.contexts.splice(index, 1)\n            delegated.listeners.splice(index, 1)\n\n            // remove delegate function from context\n            remove(context, type, delegateListener)\n            remove(context, type, delegateUseCapture, true)\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null\n            }\n          }\n\n          // only remove one listener\n          matchFound = true\n          break\n        }\n      }\n\n      if (matchFound) { break }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event: Event, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  const fakeEvent = new FakeEvent(event)\n  const delegated = delegatedEvents[event.type]\n  const [eventTarget] = (pointerUtils.getEventTargets(event))\n  let element = eventTarget\n\n  // climb up document tree looking for selector matches\n  while (is.element(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i]\n      const context = delegated.contexts[i]\n\n      if (domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)) {\n        const listeners = delegated.listeners[i]\n\n        fakeEvent.currentTarget = element\n\n        for (const [fn, capture, passive] of listeners) {\n          if (capture === !!options.capture && passive === options.passive) {\n            fn(fakeEvent)\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element)\n  }\n}\n\nfunction delegateUseCapture (event: Event) {\n  return delegateListener.call(this, event, true)\n}\n\nfunction getOptions (param) {\n  return is.object(param) ? param : { capture: param }\n}\n\nexport class FakeEvent implements Partial<Event> {\n  currentTarget: EventTarget\n\n  constructor (public originalEvent) {\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nconst events = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  supportsOptions: false,\n  supportsPassive: false,\n\n  _elements: elements,\n  _targets: targets,\n\n  init (window: Window) {\n    window.document.createElement('div').addEventListener('test', null, {\n      get capture () { return (events.supportsOptions = true) },\n      get passive () { return (events.supportsPassive = true) },\n    })\n  },\n}\n\nexport default events\n","export default function extend<T, U extends Partial<T>> (dest: U, source: T) {\n  for (const prop in source) {\n    (dest as unknown as T)[prop] = source[prop]\n  }\n  return dest as T & U\n}\n","import { rectToXY, resolveRectLike } from './rect'\n\nexport default function (target, element, action?) {\n  const actionOptions = target.options[action]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","export default (x, y) =>  Math.sqrt(x * x + y * y)\n","import * as arr from './arr'\nimport * as dom from './domUtils'\nimport * as is from './is'\nimport win from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any) => any, message: string) {\n  let warned = false\n\n  // eslint-disable-next-line no-shadow\n  return function (this: T) {\n    if (!warned) {\n      (win as any).window.console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nexport function _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nexport function getQuadraticCurvePoint (\n  startX: number, startY: number, cpX: number, cpY: number, endX: number, endY: number, position: number) {\n  return {\n    x:  _getQBezierValue(position, startX, cpX, endX),\n    y:  _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nexport function easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport function copyAction (dest: Interact.ActionProps, src: Interact.ActionProps) {\n  dest.name  = src.name\n  dest.axis  = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport { default as browser } from './browser'\nexport { default as clone } from './clone'\nexport { default as events } from './events'\nexport { default as extend } from './extend'\nexport { default as getOriginXY } from './getOriginXY'\nexport { default as hypot } from './hypot'\nexport { default as normalizeListeners } from './normalizeListeners'\nexport { default as pointer } from './pointerUtils'\nexport { default as raf } from './raf'\nexport { default as rect } from './rect'\nexport { default as Signals } from './Signals'\nexport { win, arr, dom, is }\n","// tslint:disable variable-name\n\nimport isWindow from './isWindow'\nimport win from './window'\n\nexport const window = (thing: any): thing is Window =>\n  thing === win.window || isWindow(thing)\n\nexport const docFrag = (thing: any): thing is DocumentFragment =>\n  object(thing) && thing.nodeType === 11\n\nexport const object = (thing: any): thing is { [index: string]: any } =>\n  !!thing && (typeof thing === 'object')\n\nexport const func = (thing: any): thing is (...args: any) => any =>\n  typeof thing === 'function'\n\nexport const number = (thing: any): thing is number =>\n  typeof thing === 'number'\n\nexport const bool = (thing: any): thing is boolean =>\n  typeof thing === 'boolean'\n\nexport const string = (thing: any): thing is string =>\n  typeof thing === 'string'\n\nexport const element = (thing: any): thing is Element => {\n  if (!thing || (typeof thing !== 'object')) { return false }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return (/object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element // DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string')\n}\n\nexport const plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) &&\n  !!thing.constructor &&\n  /function Object\\b/.test(thing.constructor.toString())\n\nexport const array = (thing: any): thing is any[] =>\n  (object(thing) &&\n  (typeof thing.length !== 'undefined') &&\n  func(thing.splice))\n","export default (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window)\n","import extend from './extend'\nimport * as is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Interact.Listener[]\n}\n\nexport default function normalize (\n  type: Interact.EventTypes,\n  listeners?: Interact.ListenersArg | Interact.ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>(\n      (acc, t) => extend(acc, normalize(t, listeners, result)),\n      result\n    )\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  }\n  else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  }\n  else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n","export interface PointerExtend {\n  webkit: RegExp\n  [prefix: string]: RegExp\n}\n\nexport function pointerExtend<PointerExtend> (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = pointerExtend.prefixedPropREs\n    let deprecated = false\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true\n        break\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop]\n    }\n  }\n  return dest\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n}\n\nexport default pointerExtend\n","import browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport * as is from './is'\nimport pointerExtend from './pointerExtend'\n\nconst pointerUtils = {\n  copyCoords (dest, src) {\n    dest.page = dest.page || {}\n    dest.page.x = src.page.x\n    dest.page.y = src.page.y\n\n    dest.client = dest.client || {}\n    dest.client.x = src.client.x\n    dest.client.y = src.client.y\n\n    dest.timeStamp = src.timeStamp\n  },\n\n  setCoordDeltas (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x\n    targetObj.page.y    = cur.page.y    - prev.page.y\n    targetObj.client.x  = cur.client.x  - prev.client.x\n    targetObj.client.y  = cur.client.y  - prev.client.y\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n  },\n\n  setCoordVelocity (targetObj, delta) {\n    const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n    targetObj.page.x   = delta.page.x / dt\n    targetObj.page.y   = delta.page.y / dt\n    targetObj.client.x = delta.client.x / dt\n    targetObj.client.y = delta.client.y / dt\n    targetObj.timeStamp = dt\n  },\n\n  isNativePointer  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch)\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY (type, pointer, xy) {\n    xy = xy || {}\n    type = type || 'page'\n\n    xy.x = pointer[type + 'X']\n    xy.y = pointer[type + 'Y']\n\n    return xy\n  },\n\n  getPageXY (pointer: Interact.PointerType | Interact.InteractEvent, page?: Interact.Point) {\n    page = page || { x: 0, y: 0 }\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page)\n\n      page.x += window.scrollX\n      page.y += window.scrollY\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page)\n    }\n\n    return page\n  },\n\n  getClientXY (pointer, client) {\n    client = client || {}\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client)\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client)\n    }\n\n    return client\n  },\n\n  getPointerId (pointer) {\n    return is.number(pointer.pointerId) ? pointer.pointerId : pointer.identifier\n  },\n\n  setCoords (targetObj, pointers: any[], timeStamp: number) {\n    const pointer = (pointers.length > 1\n      ? pointerUtils.pointerAverage(pointers)\n      : pointers[0])\n\n    const tmpXY = {} as { x: number, y: number }\n\n    pointerUtils.getPageXY(pointer, tmpXY)\n    targetObj.page.x = tmpXY.x\n    targetObj.page.y = tmpXY.y\n\n    pointerUtils.getClientXY(pointer, tmpXY)\n    targetObj.client.x = tmpXY.x\n    targetObj.client.y = tmpXY.y\n\n    targetObj.timeStamp = timeStamp\n  },\n\n  pointerExtend,\n\n  getTouchPair (event) {\n    const touches = []\n\n    // array of touches is supplied\n    if (is.array(event)) {\n      touches[0] = event[0]\n      touches[1] = event[1]\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0]\n          touches[1] = event.changedTouches[0]\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0]\n          touches[1] = event.changedTouches[1]\n        }\n      }\n      else {\n        touches[0] = event.touches[0]\n        touches[1] = event.touches[1]\n      }\n    }\n\n    return touches\n  },\n\n  pointerAverage (pointers: PointerEvent[] | Event[]) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    }\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop]\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length\n    }\n\n    return average\n  },\n\n  touchBBox (event: Event | Array<(Interact.PointerType) | TouchEvent>) {\n    if (!(event as any).length &&\n        !((event as TouchEvent).touches &&\n          (event as TouchEvent).touches.length > 1)) {\n      return null\n    }\n\n    const touches = pointerUtils.getTouchPair(event)\n    const minX = Math.min(touches[0].pageX, touches[1].pageX)\n    const minY = Math.min(touches[0].pageY, touches[1].pageY)\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      right: maxX,\n      bottom: maxY,\n      width: maxX - minX,\n      height: maxY - minY,\n    }\n  },\n\n  touchDistance (event, deltaSource) {\n    const sourceX = deltaSource + 'X'\n    const sourceY = deltaSource + 'Y'\n    const touches = pointerUtils.getTouchPair(event)\n\n    const dx = touches[0][sourceX] - touches[1][sourceX]\n    const dy = touches[0][sourceY] - touches[1][sourceY]\n\n    return hypot(dx, dy)\n  },\n\n  touchAngle (event, deltaSource) {\n    const sourceX = deltaSource + 'X'\n    const sourceY = deltaSource + 'Y'\n    const touches = pointerUtils.getTouchPair(event)\n    const dx = touches[1][sourceX] - touches[0][sourceX]\n    const dy = touches[1][sourceY] - touches[0][sourceY]\n    const angle = 180 * Math.atan2(dy, dx) / Math.PI\n\n    return  angle\n  },\n\n  getPointerType (pointer) {\n    return is.string(pointer.pointerType)\n      ? pointer.pointerType\n      : is.number(pointer.pointerType)\n        ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]\n        // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        : /touch/.test(pointer.type) || pointer instanceof dom.Touch\n          ? 'touch'\n          : 'mouse'\n  },\n\n  // [ event.target, event.currentTarget ]\n  getEventTargets (event) {\n    const path = is.func(event.composedPath) ? event.composedPath() : event.path\n\n    return [\n      domUtils.getActualElement(path ? path[0] : event.target),\n      domUtils.getActualElement(event.currentTarget),\n    ]\n  },\n\n  newCoords () {\n    return {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    }\n  },\n\n  coordsToEvent (coords: MockCoords) {\n    const event = {\n      coords,\n      get page () { return this.coords.page },\n      get client () { return this.coords.client },\n      get timeStamp () { return this.coords.timeStamp },\n      get pageX () { return this.coords.page.x },\n      get pageY () { return this.coords.page.y },\n      get clientX () { return this.coords.client.x },\n      get clientY () { return this.coords.client.y },\n      get pointerId () { return this.coords.pointerId },\n      get target () { return this.coords.target },\n      get type () { return this.coords.type },\n      get pointerType () { return this.coords.pointerType },\n    }\n\n    return event as typeof event & Interact.PointerType & Interact.PointerEventType\n  },\n}\n\nexport default pointerUtils\n\nexport interface MockCoords {\n  page: Interact.Point\n  client: Interact.Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n}\n","let lastTime = 0\nlet request\nlet cancel\n\nfunction init (window) {\n  request = window.requestAnimationFrame\n  cancel = window.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = window[`${vendor}RequestAnimationFrame`]\n      cancel = window[`${vendor}CancelAnimationFrame`] || window[`${vendor}CancelRequestAnimationFrame`]\n    }\n  }\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      // eslint-disable-next-line standard/no-callback-literal\n      const token = setTimeout(() => { callback(currTime + timeToCall) },\n        timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback) => request(callback),\n  cancel: (token) => cancel(token),\n  init,\n}\n","import { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport * as is from './is'\n\nexport function getStringOptionResult (value, interactable, element) {\n  if (!is.string(value)) {\n    return null\n  }\n\n  if (value === 'parent') {\n    value = parentNode(element)\n  }\n  else if (value === 'self') {\n    value = interactable.getRect(element)\n  }\n  else {\n    value = closest(element, value)\n  }\n\n  return value\n}\n\nexport function resolveRectLike (value, interactable?, element?, functionArgs?) {\n  value = getStringOptionResult(value, interactable, element) || value\n\n  if (is.func(value)) {\n    value = value.apply(null, functionArgs)\n  }\n\n  if (is.element(value)) {\n    value = getElementRect(value)\n  }\n\n  return value\n}\n\nexport function rectToXY (rect) {\n  return  rect && {\n    x: 'x' in rect ? rect.x : rect.left,\n    y: 'y' in rect ? rect.y : rect.top,\n  }\n}\n\nexport function xywhToTlbr (rect) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left   = rect.x || 0\n    rect.top    = rect.y || 0\n    rect.right  = rect.right   || (rect.left + rect.width)\n    rect.bottom = rect.bottom  || (rect.top + rect.height)\n  }\n\n  return rect\n}\n\nexport function tlbrToXywh (rect) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x      = rect.left || 0\n    rect.y      = rect.top  || 0\n    rect.width  = rect.width  || (rect.right  - rect.x)\n    rect.height = rect.height || (rect.bottom - rect.y)\n  }\n\n  return rect\n}\n\nexport default {\n  getStringOptionResult,\n  resolveRectLike,\n  rectToXY,\n  xywhToTlbr,\n  tlbrToXywh,\n}\n","function createGrid (grid: (Interact.Rect | Interact.Point) & { range?: number, limits: Interact.Rect, offset: Interact.Point }) {\n  const coordFields = [\n    ['x', 'y'],\n    ['left', 'top'],\n    ['right', 'bottom'],\n    ['width', 'height'],\n  ].filter(([xField, yField]) => xField in grid || yField in grid)\n\n  return function (x, y) {\n    const {\n      range,\n      limits = {\n        left  : -Infinity,\n        right :  Infinity,\n        top   : -Infinity,\n        bottom:  Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result = { range }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / grid[xField])\n      const gridy = Math.round((y - offset.y) / grid[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * grid[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * grid[yField] + offset.y))\n    }\n\n    return result\n  }\n}\n\nexport default createGrid\n","import grid from './grid'\n\nexport { grid }\n","import isWindow from './isWindow'\n\nconst win = {\n  realWindow: undefined as Window,\n  window: undefined as Window,\n  getWindow,\n  init,\n}\n\nexport function init (window: Window & { wrap?: (...args) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document &&\n      typeof window.wrap === 'function' &&\n    window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win.window = window\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined\n  win.realWindow = undefined\n}\nelse {\n  init(window)\n}\n\nexport function getWindow (node) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = (node.ownerDocument || node)\n\n  return rootNode.defaultView || win.window\n}\n\nwin.init = init\n\nexport default win\n"]}